[{"C:\\Front\\Movie-Search\\src\\index.tsx":"1","C:\\Front\\Movie-Search\\src\\serviceWorker.js":"2","C:\\Front\\Movie-Search\\src\\app\\App.tsx":"3","C:\\Front\\Movie-Search\\src\\app\\store.tsx":"4","C:\\Front\\Movie-Search\\src\\app\\Header.tsx":"5","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadCategory.tsx":"6","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadSearch.tsx":"7","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx":"8","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx":"9","C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx":"10","C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx":"11","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx":"12","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListPage.tsx":"13","C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx":"14","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx":"15","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFilter.tsx":"16","C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx":"17","C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx":"18","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx":"19","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx":"20","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx":"21","C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx":"22","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx":"23","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx":"24","C:\\Front\\Movie-Search\\src\\app\\image.tsx":"25","C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx":"26","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx":"27","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx":"28","C:\\Front\\Movie-Search\\src\\context\\authContext.tsx":"29","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx":"30","C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx":"31","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx":"32","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthForm.tsx":"33","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx":"34","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx":"35","C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx":"36","C:\\Front\\Movie-Search\\src\\app\\lib.tsx":"37","C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx":"38","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx":"39","C:\\Front\\Movie-Search\\src\\app\\Image.tsx":"40","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainer.tsx":"41","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerFavorite.tsx":"42","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerDetails.tsx":"43","C:\\Front\\Movie-Search\\src\\features\\movies\\MovieD.tsx":"44"},{"size":1287,"mtime":1617812176941,"results":"45","hashOfConfig":"46"},{"size":5086,"mtime":1614783138488,"results":"47","hashOfConfig":"46"},{"size":1900,"mtime":1618072139348,"results":"48","hashOfConfig":"46"},{"size":379,"mtime":1617812176929,"results":"49","hashOfConfig":"46"},{"size":1704,"mtime":1617812176927,"results":"50","hashOfConfig":"46"},{"size":1066,"mtime":1618059302402,"results":"51","hashOfConfig":"46"},{"size":716,"mtime":1614783138483,"results":"52","hashOfConfig":"46"},{"size":1095,"mtime":1617619312957,"results":"53","hashOfConfig":"46"},{"size":1295,"mtime":1614783138477,"results":"54","hashOfConfig":"46"},{"size":1348,"mtime":1618069017977,"results":"55","hashOfConfig":"46"},{"size":3868,"mtime":1617812176928,"results":"56","hashOfConfig":"46"},{"size":2692,"mtime":1617869283202,"results":"57","hashOfConfig":"46"},{"size":1159,"mtime":1618059242347,"results":"58","hashOfConfig":"46"},{"size":2873,"mtime":1617812176934,"results":"59","hashOfConfig":"46"},{"size":1772,"mtime":1617812176934,"results":"60","hashOfConfig":"46"},{"size":956,"mtime":1614783138482,"results":"61","hashOfConfig":"46"},{"size":1585,"mtime":1618058729007,"results":"62","hashOfConfig":"46"},{"size":5045,"mtime":1618071431508,"results":"63","hashOfConfig":"46"},{"size":1566,"mtime":1617812176938,"results":"64","hashOfConfig":"46"},{"size":676,"mtime":1617812176939,"results":"65","hashOfConfig":"46"},{"size":744,"mtime":1617812176937,"results":"66","hashOfConfig":"46"},{"size":1699,"mtime":1617869278735,"results":"67","hashOfConfig":"46"},{"size":201,"mtime":1614783138487,"results":"68","hashOfConfig":"46"},{"size":1462,"mtime":1617865180729,"results":"69","hashOfConfig":"46"},{"size":641,"mtime":1617734350348,"results":"70","hashOfConfig":"46"},{"size":6589,"mtime":1618072047238,"results":"71","hashOfConfig":"46"},{"size":1000,"mtime":1618069386177,"results":"72","hashOfConfig":"46"},{"size":3080,"mtime":1617812176936,"results":"73","hashOfConfig":"46"},{"size":3552,"mtime":1617812176930,"results":"74","hashOfConfig":"46"},{"size":493,"mtime":1617196304938,"results":"75","hashOfConfig":"46"},{"size":2067,"mtime":1617870572714,"results":"76","hashOfConfig":"46"},{"size":1089,"mtime":1617812176932,"results":"77","hashOfConfig":"46"},{"size":1357,"mtime":1617196471178,"results":"78","hashOfConfig":"46"},{"size":2034,"mtime":1617869799965,"results":"79","hashOfConfig":"46"},{"size":2001,"mtime":1617870644943,"results":"80","hashOfConfig":"46"},{"size":572,"mtime":1617867478138,"results":"81","hashOfConfig":"46"},{"size":1434,"mtime":1617869760064,"results":"82","hashOfConfig":"46"},{"size":1451,"mtime":1617977618335,"results":"83","hashOfConfig":"46"},{"size":1669,"mtime":1617812176928,"results":"84","hashOfConfig":"46"},{"size":641,"mtime":1617734350348,"results":"85","hashOfConfig":"46"},{"size":1897,"mtime":1618069835258,"results":"86","hashOfConfig":"46"},{"size":615,"mtime":1618069876958,"results":"87","hashOfConfig":"46"},{"size":1725,"mtime":1618072286752,"results":"88","hashOfConfig":"46"},{"size":5894,"mtime":1618072000691,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"phhbyg",{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Front\\Movie-Search\\src\\index.tsx",[],[],"C:\\Front\\Movie-Search\\src\\serviceWorker.js",["201","202","203"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",[],"C:\\Front\\Movie-Search\\src\\app\\App.tsx",["204","205","206","207"],"import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport { Header } from './Header'\r\nimport { MovieDetails } from '../features/movies/MovieDetails'\r\nimport { FilterPage } from '../features/filter/filerPage'\r\nimport { moviesCategory } from '../features/movies/moviesLoadCategory'\r\nimport { moviesSearch } from '../features/movies/moviesLoadSearch'\r\nimport { MoviesContainerFavorite } from '../features/movies/MoviesContainerFavorite'\r\nimport { MoviesContainer } from '../features/movies/MoviesContainer'\r\nimport { MovieContainerDetails } from './../features/movies/MoviesContainerDetails'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={MoviesContainer} />\r\n        <Route exact path='/upcoming' component={MoviesContainer} />\r\n        <Route exact path='/top_rated' component={MoviesContainer} />\r\n        <Route exact path='/search' component={MoviesContainer} />\r\n        <Route exact path='/favorite' component={MoviesContainerFavorite} />\r\n        <Route exact path='/filter' component={FilterPage} />\r\n        {/* <Route exact path={`/:media_type/:movieId`} component={MovieDetails} /> */}\r\n        <Route\r\n          exact\r\n          path={`/:media_type/:movieId`}\r\n          component={MovieContainerDetails}\r\n        />\r\n      </Switch>\r\n      {/* <Switch>\r\n        <Route exact path='/' component={moviesCategory} />\r\n        <Route exact path='/upcoming' component={moviesCategory} />\r\n        <Route exact path='/top_rated' component={moviesCategory} />\r\n        <Route exact path='/favorite' component={moviesFavorite} />\r\n        <Route exact path='/search' component={moviesSearch} />\r\n        <Route exact path='/filter' component={FilterPage} />\r\n        <Route exact path={`/:media_type/:movieId`} component={MovieDetails} />\r\n      </Switch> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Front\\Movie-Search\\src\\app\\store.tsx",["208"],"import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport moviesReducer from './../features/movies/moviesSlice'\r\nimport filterReducer from './../features/filter/filterSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // movies: moviesReducer,\r\n    filter: filterReducer,\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","C:\\Front\\Movie-Search\\src\\app\\Header.tsx",["209"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { MoviesSearchPage } from '../features/search/moviesSearchPage'\r\nimport { Navbar } from './Navbar'\r\nimport { Auth } from '../features/auth/Auth'\r\nimport { device, Title } from './lib'\r\nimport logo from './../style/react-logo.png'\r\n\r\nconst Head = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 200;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  background-color: #0b0b0b;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-areas:\r\n    '  lg lg in in at'\r\n    ' nv nv nv nv nv ';\r\n  width: 80%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding-top: 18px;\r\n  align-items: center;\r\n\r\n  @media ${device.laptopM} {\r\n    padding-bottom: 25px;\r\n    width: auto;\r\n    margin: 0 25px;\r\n    grid-template-columns: repeat(9, 1fr);\r\n    grid-template-areas:\r\n      'nv . . lg lg lg . . .'\r\n      '. in in in in in in in .';\r\n  }\r\n\r\n  @media ${device.mobileM} {\r\n    grid-template-areas:\r\n      'nv . . lg lg lg . . .'\r\n      'in in in in in in in in in';\r\n    margin: 0 15px;\r\n  }\r\n`\r\n\r\nconst Logo = styled(Link)`\r\n  grid-area: lg;\r\n  display: flex;\r\n  justify-self: center;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 50;\r\n  img {\r\n    width: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Head>\r\n      <Container>\r\n        <Logo to='/'>\r\n          <img src={logo} alt='logo' />\r\n          <Title size={'40px'}>Movies-Search</Title>\r\n        </Logo>\r\n\r\n        <MoviesSearchPage />\r\n        <Auth />\r\n        <Navbar />\r\n      </Container>\r\n    </Head>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadCategory.tsx",["210","211"],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadSearch.tsx",["212"],"import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { MoviesListPage } from './moviesListPage'\r\nimport { OnPageChangeCallback } from './moviesPagination'\r\n\r\nexport const moviesSearch = () => {\r\n  const { search } = useLocation()\r\n  const [page, setPage] = useState(1)\r\n\r\n  const onPageChange: OnPageChangeCallback = (selectedItem) => {\r\n    const newPage = selectedItem.selected + 1\r\n    setPage(newPage)\r\n  }\r\n\r\n  const { status, data } = useFetch({ pathname: '/search', page, search })\r\n\r\n  return (\r\n    <MoviesListPage\r\n      status={status}\r\n      moviesData={data}\r\n      onPageChange={onPageChange}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx",["213"],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx",["214","215","216"],"C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx",["217"],"import React, { useEffect, useRef } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport github from './../style/github.svg'\r\nimport styled from 'styled-components'\r\nimport { device } from './lib'\r\n// import style from './navbar.module.css'\r\nimport Toggle from './Toggle'\r\nimport { useClickOutSide } from './../hooks/useClickOutSide'\r\n\r\nconst Nav = styled.nav`\r\n  grid-area: nv;\r\n  font-size: 20px;\r\n  transition: ease 0.3s;\r\n  media ${device.laptopM} {\r\n    justify-self: center;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media ${device.laptopM} {\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    z-index: 100;\r\n    left: 0;\r\n    bottom: -361px;\r\n    width: 250px;\r\n    background-color: #212121;\r\n    -webkit-font-smoothing: antialiased;\r\n    transform-origin: 0% 0%;\r\n    transform: translate(-100%, 0);\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);\r\n  }\r\n`\r\n\r\nconst ListHidden = styled(List)`\r\n  transform: none;\r\n`\r\n\r\nconst Item = styled.li`\r\n  cursor: pointer;\r\n  @media ${device.laptopM} {\r\n    width: 100%;\r\n    margin-left: 40px;\r\n    display: block;\r\n  }\r\n  @media ${device.mobileM} {\r\n    margin-left: 0;\r\n  }\r\n`\r\nconst activeClassName = 'nav-item-active'\r\n\r\nconst Link = styled(NavLink).attrs({ activeClassName })`\r\n  &.${activeClassName} {\r\n    &::after {\r\n      transform: scaleY(1);\r\n    }\r\n    @media ${device.laptopM} {\r\n      background-color: #252525;\r\n    }\r\n  }\r\n  display: inline-block;\r\n  color: #fff;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  position: relative;\r\n  transition: color 0.3s ease;\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 4px;\r\n    bottom: 0px;\r\n    left: 0;\r\n    transform: scaleY(0);\r\n    transform-origin: bottom;\r\n    transition: transform 235ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding-left: 25px;\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst Icon = styled.img`\r\n  transition: opacity 0.3s ease;\r\n  width: 25px;\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport const Navbar = () => {\r\n  const wrapperRef = useRef<HTMLElement | null>(null)\r\n  const location = useLocation()\r\n  const [isHidden, setHidden] = React.useState<boolean>(true)\r\n\r\n  useClickOutSide(wrapperRef, () => {\r\n    document.body.classList.remove('overlay')\r\n    setHidden(true)\r\n  })\r\n\r\n  useEffect(() => {\r\n    setHidden(true)\r\n    document.body.classList.remove('overlay')\r\n  }, [location.key])\r\n\r\n  const handleClickBtn = () => {\r\n    if (isHidden) {\r\n      setHidden(false)\r\n      document.body.classList.toggle('overlay')\r\n    } else {\r\n      setHidden(true)\r\n      document.body.classList.toggle('overlay')\r\n    }\r\n  }\r\n\r\n  const Items = isHidden ? List : ListHidden\r\n  return (\r\n    <Nav ref={wrapperRef}>\r\n      <Toggle isHidden={isHidden} onClick={() => handleClickBtn()} />\r\n      <Items>\r\n        <Item>\r\n          <Link exact to='/'>\r\n            Popular\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/upcoming'>Up comning</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/top_rated'>Top rated</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/favorite'>Favorite</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/filter'>Filter</Link>\r\n        </Item>\r\n        <Item>\r\n          <a\r\n            href='https://github.com/ethnicolr/Movie-Search'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <Icon src={github} alt='github' width='40' />\r\n          </a>\r\n        </Item>\r\n      </Items>\r\n    </Nav>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx",["218"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { debounce } from 'lodash'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useClickOutSide } from '../../hooks/useClickOutSide'\r\nimport { useAsync } from '../../hooks/useAsync'\r\nimport { getMovies, MoviesResult } from '../../api/movieApi'\r\nimport { MoviesSearchInput } from './moviesSearchInput'\r\nimport { MoviesSearchList } from './moviesSearchList'\r\nimport { Spinner } from '../../app/Spinner'\r\nimport { Title } from '../../app/lib'\r\nimport styled from 'styled-components'\r\n\r\nconst Search = styled.div`\r\n  grid-area: in;\r\n  position: relative;\r\n  z-index: 20;\r\n  grid-area: in;\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  background: #212121;\r\n  z-index: 10;\r\n`\r\n\r\nconst HiddenContainer = styled(Container)`\r\n  display: none;\r\n`\r\nconst Text = styled.div`\r\n  text-align: center;\r\n  padding: 15px 5px;\r\n`\r\n\r\nexport const MoviesSearchPage = () => {\r\n  const [isHidden, setHidden] = useState(false)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const wrapperRef = React.useRef<HTMLDivElement | null>(null)\r\n\r\n  const {\r\n    run,\r\n    data,\r\n    isLoading,\r\n    error,\r\n    isError,\r\n    isSuccess,\r\n  } = useAsync<MoviesResult>()\r\n\r\n  const delay = useCallback(\r\n    debounce((value: string) => {\r\n      if (value.length) {\r\n        run(getMovies({ pathname: '/search', search: value }))\r\n      }\r\n    }, 500),\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    setHidden(true)\r\n  }, [location.key])\r\n\r\n  useClickOutSide(\r\n    wrapperRef,\r\n    () => setHidden(true),\r\n    () => setHidden(false)\r\n  )\r\n\r\n  const onSearchSubmit = (value: string): void => {\r\n    history.push({\r\n      pathname: '/search',\r\n      search: value,\r\n    })\r\n  }\r\n\r\n  let previewList\r\n\r\n  if (isSuccess && data?.moviesList.length === 0) {\r\n    previewList = (\r\n      <Text>\r\n        <Title size={'25px'} color={'#fff'}>\r\n          Not found\r\n        </Title>\r\n      </Text>\r\n    )\r\n  } else if (isError) {\r\n    previewList = (\r\n      <Text>\r\n        <Title size={'25px'} color={'#fff'}>\r\n          {error}\r\n        </Title>\r\n      </Text>\r\n    )\r\n  } else if (isSuccess && data) {\r\n    previewList = <MoviesSearchList movies={data.moviesList.slice(0, 5)} />\r\n  } else if (isLoading) {\r\n    previewList = <Spinner color={'#fff'} width={'15px'} height={'15px'} />\r\n  }\r\n\r\n  const Wrapper = isHidden ? HiddenContainer : Container\r\n\r\n  return (\r\n    <>\r\n      <Search ref={wrapperRef}>\r\n        <MoviesSearchInput\r\n          onSearchChange={delay}\r\n          onSearchSubmit={onSearchSubmit}\r\n        />\r\n        <Wrapper>{previewList}</Wrapper>\r\n      </Search>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListPage.tsx",["219","220"],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx",["221"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeGenres } from './filterSlice'\r\nimport { RootState } from '../../app/store'\r\nimport { fetchGenres } from './filterSlice'\r\n// import style from './filterGenres.module.css'\r\nimport styled from 'styled-components'\r\nimport { device, Title } from '../../app/lib'\r\n\r\nconst Container = styled.div`\r\n  padding-left: 15px;\r\n  position: sticky;\r\n  top: 145px;\r\n  @media ${device.laptopS} {\r\n    text-align: center;\r\n    position: sticky;\r\n    top: 150px;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  @media ${device.laptopS} {\r\n    padding: 1px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst Item = styled.li`\r\n  @media ${device.laptopS} {\r\n    min-width: 150px;\r\n    margin-right: 15px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 15px;\r\n  padding: 8px 8px 8px 40px;\r\n\r\n  &:hover {\r\n    background-color: #e1e1e1;\r\n  }\r\n\r\n  input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    height: 0;\r\n    width: 0;\r\n  }\r\n\r\n  input:checked + label {\r\n    background-color: #0f9fbf;\r\n  }\r\n  input:checked ~ span::after {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Checkmark = styled.span`\r\n  position: absolute;\r\n  top: 7px;\r\n  left: 10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  background-color: #cfcfcf;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  &::after {\r\n    left: 6px;\r\n    top: 2px;\r\n    width: 5px;\r\n    height: 10px;\r\n    border: solid #0f9fbf;\r\n    border-width: 0 3px 3px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n  }\r\n`\r\n\r\nexport const FilterGenres = () => {\r\n  const dispatch = useDispatch()\r\n  const genres = useSelector((state: RootState) => state.filter.genres)\r\n\r\n  useEffect(() => {\r\n    if (genres.length === 0) {\r\n      dispatch(fetchGenres())\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    dispatch(changeGenres(e.currentTarget.name))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title size={'20px'}>Genres</Title>\r\n      <List>\r\n        {genres.length\r\n          ? genres.map((genre) => {\r\n              return (\r\n                <Item key={genre.id}>\r\n                  <Label>\r\n                    {genre.name}\r\n                    <input\r\n                      type='checkbox'\r\n                      onChange={handleChange}\r\n                      checked={genre.selected}\r\n                      name={genre.id}\r\n                    />\r\n                    <Checkmark />\r\n                  </Label>\r\n                </Item>\r\n              )\r\n            })\r\n          : null}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx",["222"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sortBy } from './filterSlice'\r\nimport { RootState } from './../../app/store'\r\nimport style from './filterSorting.module.css'\r\nimport styled from 'styled-components'\r\nimport { Title } from '../../app/lib'\r\n\r\nconst Container = styled.div`\r\n  text-align: right;\r\n  padding: 20px 25px 10px 0;\r\n`\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nexport const FilterSorting = () => {\r\n  const dispatch = useDispatch()\r\n  const active = useSelector((state: RootState) => state.filter.sortBy)\r\n\r\n  const handleSort = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    dispatch(sortBy(e.currentTarget.name))\r\n  }\r\n\r\n  const sortActivity = (field: string) => {\r\n    return active === `${field}.desc`\r\n      ? `${style.sortBtn} ${style.desc}`\r\n      : `${style.sortBtn} ${style.asc}`\r\n  }\r\n\r\n  return (\r\n    <Container className={style.sort}>\r\n      <Title size={'20px'}>Sort by</Title>\r\n      <Items>\r\n        <li>\r\n          <button\r\n            className={sortActivity('popularity')}\r\n            name='popularity'\r\n            onClick={handleSort}\r\n          >\r\n            popularity\r\n          </button>\r\n        </li>\r\n        <li className={style.item}>\r\n          <button\r\n            className={sortActivity('release_date')}\r\n            name='release_date'\r\n            onClick={handleSort}\r\n          >\r\n            date\r\n          </button>\r\n        </li>\r\n        <li className={style.item}>\r\n          <button\r\n            className={sortActivity('vote_average')}\r\n            name='vote_average'\r\n            onClick={handleSort}\r\n          >\r\n            rating\r\n          </button>\r\n        </li>\r\n      </Items>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFilter.tsx",["223"],"import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../app/store'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { MoviesListPage } from './moviesListPage'\r\nimport { OnPageChangeCallback } from './moviesPagination'\r\n\r\nexport const LoadFilterMovies = () => {\r\n  const [page, setPage] = useState(1)\r\n  const { genres, sortBy } = useSelector((state: RootState) => state.filter)\r\n\r\n  const selectedGenres = genres\r\n    .filter((genre) => genre.selected)\r\n    .map((genre) => genre.id)\r\n\r\n  const onPageChange: OnPageChangeCallback = (selectedItem) => {\r\n    const newPage = selectedItem.selected + 1\r\n    setPage(newPage)\r\n  }\r\n\r\n  const { status, data } = useFetch({\r\n    pathname: '/filter',\r\n    sortBy,\r\n    genres: selectedGenres,\r\n    page,\r\n  })\r\n\r\n  return (\r\n    <MoviesListPage\r\n      status={status}\r\n      moviesData={data}\r\n      onPageChange={onPageChange}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx",[],"C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx",["224"],"C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx",["225","226"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport seach from './../../style/search.svg'\r\n\r\ninterface InputProps {\r\n  onSearchChange(value: string): void\r\n  onSearchSubmit(value: string): void\r\n}\r\n\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  padding-left: 40px;\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border-bottom: 1px solid #0f9fbf;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 30px;\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 13px;\r\n  outline: none;\r\n`\r\n\r\nexport const MoviesSearchInput = ({\r\n  onSearchChange,\r\n  onSearchSubmit,\r\n}: InputProps) => {\r\n  const [value, setValue] = useState('')\r\n  const inputEl = React.useRef<HTMLInputElement>(null!)\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    const value = e.currentTarget.value\r\n    setValue(value)\r\n    onSearchChange(value)\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n    if (value.length) {\r\n      onSearchSubmit(value)\r\n      inputEl.current.blur()\r\n      document.body.style.overflow = 'auto'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          ref={inputEl}\r\n          type='text'\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder='Seacrh movie...'\r\n        />\r\n        <Button>\r\n          <img src={seach} alt='seach' />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx",["227"],"import React from 'react'\r\nimport Paginate, { ReactPaginateProps } from 'react-paginate'\r\nimport style from './moviesPagination.module.css'\r\n\r\nexport type OnPageChangeCallback = ReactPaginateProps['onPageChange']\r\n\r\ninterface Props {\r\n  currentPage: number\r\n  pageCount: number\r\n  onPageChange?: OnPageChangeCallback\r\n}\r\n\r\nexport const Pagination = ({ currentPage, onPageChange, pageCount }: Props) => {\r\n  return (\r\n    <Paginate\r\n      forcePage={currentPage}\r\n      pageCount={pageCount}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={5}\r\n      onPageChange={onPageChange}\r\n      nextLabel='&rarr;'\r\n      previousLabel='&larr;'\r\n      containerClassName={style.pagination}\r\n      activeClassName={style.active}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx",["228","229"],"import React from 'react'\r\nimport { StringDecoder } from 'string_decoder'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`\r\nconst Dots = styled.div`\r\n  padding: 5px;\r\n`\r\n\r\ntype DotProps = {\r\n  bgColor?: string\r\n  width?: string\r\n  height?: string\r\n}\r\nconst Dot = styled.div<DotProps>`\r\n  width: ${(props) => props.width || '20px'};\r\n  height: ${(props) => props.height || '20px'};\r\n  background-color: transparent;\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  &::after {\r\n    transform: scale(0.2);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    content: '';\r\n    border-radius: 50%;\r\n    background-color: ${(props) => props.bgColor || '#000000'};\r\n    width: ${(props) => props.width || '20px'};\r\n    height: ${(props) => props.height || '20px'};\r\n    display: inline-block;\r\n    animation-name: scale;\r\n    animation-duration: 900ms;\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  &:nth-child(2)::after {\r\n    animation-delay: 150ms;\r\n  }\r\n\r\n  &:nth-child(3)::after {\r\n    animation-delay: 300ms;\r\n  }\r\n\r\n  @keyframes scale {\r\n    0% {\r\n      transform: scale(0.2);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0.2);\r\n    }\r\n  }\r\n`\r\n\r\ntype SpinnerProps = {\r\n  color?: string\r\n  width?: string\r\n  height?: string\r\n}\r\n\r\nexport const Spinner = ({ color, width, height }: SpinnerProps) => {\r\n  return (\r\n    <Container>\r\n      <Dots>\r\n        <Dot width={width} height={height} bgColor={color} />\r\n        <Dot width={width} height={height} bgColor={color} />\r\n        <Dot width={width} height={height} bgColor={color} />\r\n      </Dots>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx",["230"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { MovieType } from '../../api/movieApi'\r\nimport { Image } from './../../app/Image'\r\n\r\nimport star from './../../style/star.svg'\r\n\r\ntype Props = { movie: MovieType }\r\n\r\nconst Item = styled(Link)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-right: 20px;\r\n  color: #fff;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 19px;\r\n  font-weight: 400;\r\n`\r\n\r\nconst Vote = styled.span`\r\n  font-size: 19px;\r\n`\r\n\r\nconst Thumb = styled.img`\r\n  width: 12px;\r\n  margin-left: 5px;\r\n`\r\n\r\nexport const MoviesSearchItem = ({ movie }: Props) => {\r\n  const {\r\n    title,\r\n    name,\r\n    release_date,\r\n    first_air_date,\r\n    poster_path,\r\n    id,\r\n    vote_average,\r\n    media_type,\r\n  } = movie\r\n\r\n  const titleValue = title || name\r\n  const dateValue =\r\n    release_date || first_air_date\r\n      ? `(${(release_date || first_air_date).split(/-/)[0]})`\r\n      : null\r\n\r\n  const vote = vote_average ? vote_average.toFixed(1) : 0\r\n  const heading = `${titleValue} ${dateValue}`\r\n  const link = `/${media_type ? media_type : 'movie'}/${id}`\r\n\r\n  const poster = `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n  return (\r\n    <Item to={link}>\r\n      <Image src={poster} size={'50px'} />\r\n      <Title>{heading}</Title>\r\n      <Vote>\r\n        {vote}\r\n        <Thumb src={star} alt='vote' />\r\n      </Vote>\r\n    </Item>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\image.tsx",["231"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx",["232","233","234","235"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx",["236"],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx",[],"C:\\Front\\Movie-Search\\src\\context\\authContext.tsx",["237"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\nimport { auth, db } from './../index'\r\n\r\nexport type singupType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type loginType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type logoutType = () => Promise<void>\r\n\r\ninterface ValueProps {\r\n  currentUser: firebase.User | null\r\n  singup: singupType\r\n  login: loginType\r\n  logout: logoutType\r\n  handleLoginModal: (value: boolean) => void\r\n  handleSingUpModal: (value: boolean) => void\r\n  addToStorage: (id: string) => Promise<void>\r\n  deleteFromStorage: (id: string) => Promise<void>\r\n  favoriteList: string[]\r\n  isOpenLogin: boolean\r\n  isOpenSingUp: boolean\r\n}\r\n\r\nconst AuthContext = React.createContext({} as ValueProps)\r\n\r\nexport function useAuth(): ValueProps {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null)\r\n  const [favoriteList, setFavoriteList] = useState<string[]>([])\r\n  const [isOpenLogin, setModalLogin] = useState(false)\r\n  const [isOpenSingUp, setModalSingUp] = useState(false)\r\n\r\n  const singup: singupType = (email, password) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const login: loginType = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const logout: logoutType = () => {\r\n    console.log('test')\r\n    return auth.signOut()\r\n  }\r\n  const handleLoginModal = (value: boolean) => {\r\n    setModalLogin(value)\r\n  }\r\n\r\n  const handleSingUpModal = (value: boolean) => {\r\n    setModalSingUp(value)\r\n  }\r\n\r\n  const getFaviriteList = async (\r\n    docRef: firebase.firestore.DocumentReference\r\n  ) => {\r\n    const userData = await docRef.get()\r\n    const favorite = userData.data()?.favorite as string[]\r\n    return favorite\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const docRef = db.collection('users').doc(user.uid)\r\n        docRef.get().then(async (doc) => {\r\n          if (!doc.exists) {\r\n            db.collection('users')\r\n              .doc(user.uid)\r\n              .set({ email: user.email, favorite: [] })\r\n          } else {\r\n            const favorite = await getFaviriteList(docRef)\r\n            setFavoriteList(favorite)\r\n          }\r\n        })\r\n      } else {\r\n        setFavoriteList([])\r\n      }\r\n\r\n      setCurrentUser(user)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const addToStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = [...favoriteList, id]\r\n      docRef.update('favorite', newList)\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const deleteFromStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = favoriteList.filter((movie) => movie !== id)\r\n      docRef.update('favorite', [...newList])\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const value: ValueProps = {\r\n    currentUser,\r\n    favoriteList,\r\n    isOpenLogin,\r\n    isOpenSingUp,\r\n    addToStorage,\r\n    deleteFromStorage,\r\n    singup,\r\n    login,\r\n    logout,\r\n    handleLoginModal,\r\n    handleSingUpModal,\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx",["238","239","240","241","242"],"C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx",["243"],"import React, { Fragment } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useAuth } from '../../context/authContext'\r\nimport { AuthModal } from './AuthModal'\r\nimport { AuthLogin } from './AuthLogin'\r\nimport { AuthSingup } from './AuthSingup'\r\nimport { useClickOutSide } from './../../hooks/useClickOutSide'\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  transition: color 0.3s ease;\r\n  outline: none;\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n`\r\n\r\nconst Container = styled.div({\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n})\r\n\r\nexport function Auth() {\r\n  const loginRef = React.createRef<HTMLDivElement>()\r\n  const singUpRef = React.createRef<HTMLDivElement>()\r\n\r\n  const {\r\n    currentUser,\r\n    logout,\r\n    isOpenLogin,\r\n    isOpenSingUp,\r\n    handleLoginModal,\r\n    handleSingUpModal,\r\n  } = useAuth()\r\n\r\n  useClickOutSide(loginRef, () => handleLoginModal(false))\r\n  useClickOutSide(singUpRef, () => handleSingUpModal(false))\r\n\r\n  return (\r\n    <Container>\r\n      {currentUser ? (\r\n        <Button onClick={() => logout()}>logout</Button>\r\n      ) : (\r\n        <Fragment>\r\n          <Button onClick={() => handleLoginModal(true)}>Login</Button>\r\n          <Button onClick={() => handleSingUpModal(true)}>Registr</Button>\r\n\r\n          <AuthModal title={'Login'} isOpen={isOpenLogin} ref={loginRef}>\r\n            <Button onClick={() => handleLoginModal(false)}>Close</Button>\r\n            <AuthLogin\r\n              showRegister={() => {\r\n                handleSingUpModal(true)\r\n                handleLoginModal(false)\r\n              }}\r\n            />\r\n          </AuthModal>\r\n\r\n          <AuthModal title={'Register'} isOpen={isOpenSingUp} ref={singUpRef}>\r\n            <Button onClick={() => handleSingUpModal(false)}>Close</Button>\r\n            <AuthSingup\r\n              showLogin={() => {\r\n                handleLoginModal(true)\r\n                handleSingUpModal(false)\r\n              }}\r\n            />\r\n          </AuthModal>\r\n        </Fragment>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthForm.tsx",["244"],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx",["245","246","247"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '../../app/Spinner'\r\nimport { useAuth, singupType, loginType } from '../../context/authContext'\r\nimport { Input, FormGroup, Form, Button } from './../../app/lib'\r\nimport { useAsync } from './../../hooks/useAsync'\r\n\r\nconst LoginButton = styled(Button)`\r\n  background-color: #0b0b0b;\r\n  color: #fff;\r\n  width: 100%;\r\n`\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  color: #0366d6;\r\n`\r\nconst LinkContainer = styled.p`\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  border: 1px solid var(--color-border-tertiary);\r\n  border-radius: 6px;\r\n  font-weight: 400;\r\n`\r\n\r\ntype FormProps = {\r\n  showRegister: () => void\r\n}\r\n\r\nexport function AuthLogin({ showRegister }: FormProps): JSX.Element {\r\n  const { login } = useAuth()\r\n\r\n  const { run, error, isLoading, isError } = useAsync()\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    const target = e.target as typeof e.target & {\r\n      email: { value: string }\r\n      password: { value: string }\r\n    }\r\n    const email = target.email.value\r\n    const password = target.password.value\r\n\r\n    run(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <label htmlFor='email'>Email</label>\r\n        <Input id='email' type='text' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='password'>Password</label>\r\n        <Input id='password' type='password' />\r\n      </FormGroup>\r\n      <div>\r\n        <LoginButton type='submit'>\r\n          {isLoading ? (\r\n            <Spinner color={'#fff'} width={'15px'} height={'15px'} />\r\n          ) : (\r\n            'Login'\r\n          )}\r\n        </LoginButton>\r\n      </div>\r\n      <FormGroup>{isError && <p>{error}</p>}</FormGroup>\r\n\r\n      <LinkContainer>\r\n        Need account?\r\n        <Link onClick={showRegister}> Create an account.</Link>\r\n      </LinkContainer>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx",["248","249","250","251"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, FormGroup, Form, Button } from './../../app/lib'\r\n\r\nimport { useAuth, singupType, loginType } from '../../context/authContext'\r\nimport { useAsync } from '../../hooks/useAsync'\r\nimport { Spinner } from '../../app/Spinner'\r\n\r\nconst LoginButton = styled(Button)`\r\n  background-color: #0b0b0b;\r\n  color: #fff;\r\n  width: 100%;\r\n`\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  color: #0366d6;\r\n`\r\nconst LinkContainer = styled.p`\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  border: 1px solid var(--color-border-tertiary);\r\n  border-radius: 6px;\r\n  font-weight: 400;\r\n`\r\ntype FormProps = {\r\n  showLogin: () => void\r\n}\r\n\r\nexport function AuthSingup({ showLogin }: FormProps): JSX.Element {\r\n  const { login, singup } = useAuth()\r\n  const { run, error, isLoading, isError } = useAsync()\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n\r\n    const target = e.target as typeof e.target & {\r\n      email: { value: string }\r\n      password: { value: string }\r\n    }\r\n    const email = target.email.value\r\n    const password = target.password.value\r\n\r\n    run(singup(email, password))\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <label htmlFor='email'>Email</label>\r\n        <Input id='email' type='text' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='password'>Password</label>\r\n        <Input id='password' type='password' />\r\n      </FormGroup>\r\n\r\n      <div>\r\n        <LoginButton type='submit'>\r\n          {isLoading ? (\r\n            <Spinner color={'#fff'} width={'15px'} height={'15px'} />\r\n          ) : (\r\n            'Register'\r\n          )}\r\n        </LoginButton>\r\n      </div>\r\n\r\n      <FormGroup>{isError && <p>{error}</p>}</FormGroup>\r\n      <LinkContainer>\r\n        <Link onClick={showLogin}>Login</Link>\r\n      </LinkContainer>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\lib.tsx",[],"C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx",["252","253"],"import React, { Reducer, useReducer, useCallback } from 'react'\r\n\r\ntype State<T> = {\r\n  data: null | T\r\n  status: string\r\n  error: null | string\r\n}\r\n\r\ntype Action<T> =\r\n  | { type: 'pending' }\r\n  | { type: 'resolved'; data: T }\r\n  | { type: 'rejected'; error: string }\r\n\r\nfunction asyncReducer<T>(state: State<T>, action: Action<T>): State<T> {\r\n  switch (action.type) {\r\n    case 'pending': {\r\n      return { status: 'pending', data: null, error: null }\r\n    }\r\n    case 'resolved': {\r\n      return { status: 'resolved', data: action.data, error: null }\r\n    }\r\n    case 'rejected': {\r\n      return { status: 'rejected', data: null, error: action.error }\r\n    }\r\n  }\r\n}\r\n\r\nfunction useAsync<T>() {\r\n  const [state, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(\r\n    asyncReducer,\r\n    {\r\n      status: 'idle',\r\n      data: null,\r\n      error: null,\r\n    }\r\n  )\r\n\r\n  const { data, error, status } = state\r\n\r\n  const run = useCallback((promise: Promise<T>) => {\r\n    dispatch({ type: 'pending' })\r\n    promise.then(\r\n      (data) => {\r\n        dispatch({ type: 'resolved', data })\r\n      },\r\n      (error: Error) => {\r\n        dispatch({ type: 'rejected', error: error.message })\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  return {\r\n    isIdle: status === 'idle',\r\n    isLoading: status === 'pending',\r\n    isError: status === 'rejected',\r\n    isSuccess: status === 'resolved',\r\n    error,\r\n    status,\r\n    data,\r\n    run,\r\n  }\r\n}\r\n\r\nexport { useAsync }\r\n","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx",["254"],"import React from 'react'\r\nimport { device } from './lib'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: none;\r\n  z-index: 1;\r\n  position: relative;\r\n  span {\r\n    display: none;\r\n    width: 33px;\r\n    height: 4px;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    background: #ffffff;\r\n    border-radius: 3px;\r\n    z-index: 1;\r\n    transform-origin: 4px 0px;\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),\r\n      background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    span {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  span:first-child {\r\n    transform-origin: 0% 0%;\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform-origin: 0% 100%;\r\n  }\r\n`\r\nconst ContainerHidden = styled(Container)`\r\n  span {\r\n    opacity: 1;\r\n    transform: rotate(45deg) translate(-2px, -1px);\r\n    background: #ffffff;\r\n  }\r\n\r\n  span:nth-last-child(2) {\r\n    opacity: 0;\r\n    transform: rotate(0deg) scale(0.2, 0.2);\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform: rotate(-45deg) translate(0, -1px);\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 32px;\r\n  position: absolute;\r\n  top: -7px;\r\n  left: -5px;\r\n  z-index: 2;\r\n  outline: none;\r\n`\r\n\r\ntype PropsToggle = {\r\n  isHidden: boolean\r\n  onClick: () => void\r\n}\r\n\r\nexport default function Toggle({ isHidden, onClick }: PropsToggle) {\r\n  const СonditionContainer = isHidden ? Container : ContainerHidden\r\n  return (\r\n    <СonditionContainer>\r\n      <Button onClick={onClick}></Button>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </СonditionContainer>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Image.tsx",["255"],"import React, { useState, useEffect } from 'react'\r\nimport error from './../style/error.png'\r\n\r\ninterface Props {\r\n  src: string\r\n  size?: string\r\n}\r\n\r\nexport const Image = ({ src, size = '100%' }: Props) => {\r\n  const [fallback, setFallback] = useState(src)\r\n  const [errored, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setFallback(src)\r\n  }, [src])\r\n\r\n  const handleError = () => {\r\n    if (!errored) {\r\n      setError(true)\r\n      setFallback(error)\r\n    }\r\n  }\r\n\r\n  const style = {\r\n    width: size,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={fallback} onError={handleError} alt='poster' style={style} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainer.tsx",["256","257","258","259"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerFavorite.tsx",["260","261","262","263"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerDetails.tsx",["264"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MovieD.tsx",["265","266","267","268","269","270"],{"ruleId":"271","severity":1,"message":"272","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":33},{"ruleId":"271","severity":1,"message":"275","line":23,"column":26,"nodeType":"276","messageId":"277","endLine":23,"endColumn":32},{"ruleId":"271","severity":1,"message":"272","line":129,"column":8,"nodeType":"273","messageId":"274","endLine":129,"endColumn":29},{"ruleId":"278","severity":1,"message":"279","line":4,"column":10,"nodeType":"276","messageId":"280","endLine":4,"endColumn":22},{"ruleId":"278","severity":1,"message":"281","line":6,"column":10,"nodeType":"276","messageId":"280","endLine":6,"endColumn":24},{"ruleId":"278","severity":1,"message":"282","line":7,"column":10,"nodeType":"276","messageId":"280","endLine":7,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":12,"column":1,"nodeType":"273","messageId":"274","endLine":12,"endColumn":15},{"ruleId":"278","severity":1,"message":"283","line":3,"column":8,"nodeType":"276","messageId":"280","endLine":3,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":62,"column":23,"nodeType":"284","messageId":"274","endLine":62,"endColumn":28},{"ruleId":"278","severity":1,"message":"285","line":5,"column":10,"nodeType":"276","messageId":"280","endLine":5,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":9,"column":31,"nodeType":"284","messageId":"274","endLine":9,"endColumn":36},{"ruleId":"271","severity":1,"message":"272","line":7,"column":29,"nodeType":"284","messageId":"274","endLine":7,"endColumn":34},{"ruleId":"278","severity":1,"message":"286","line":3,"column":10,"nodeType":"276","messageId":"280","endLine":3,"endColumn":17},{"ruleId":"278","severity":1,"message":"287","line":4,"column":10,"nodeType":"276","messageId":"280","endLine":4,"endColumn":26},{"ruleId":"278","severity":1,"message":"288","line":6,"column":8,"nodeType":"276","messageId":"280","endLine":6,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":47,"column":27,"nodeType":"284","messageId":"274","endLine":47,"endColumn":32},{"ruleId":"271","severity":1,"message":"272","line":108,"column":23,"nodeType":"284","messageId":"274","endLine":108,"endColumn":28},{"ruleId":"271","severity":1,"message":"272","line":35,"column":33,"nodeType":"284","messageId":"274","endLine":35,"endColumn":38},{"ruleId":"278","severity":1,"message":"289","line":2,"column":10,"nodeType":"276","messageId":"280","endLine":2,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":19,"column":31,"nodeType":"284","messageId":"274","endLine":19,"endColumn":79},{"ruleId":"271","severity":1,"message":"272","line":93,"column":29,"nodeType":"284","messageId":"274","endLine":93,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":19,"column":30,"nodeType":"284","messageId":"274","endLine":19,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":8,"column":33,"nodeType":"284","messageId":"274","endLine":8,"endColumn":38},{"ruleId":"278","severity":1,"message":"290","line":2,"column":10,"nodeType":"276","messageId":"280","endLine":2,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":31,"column":34,"nodeType":"284","messageId":"274","endLine":34,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":36,"column":50,"nodeType":"293","messageId":"294","endLine":36,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":13,"column":27,"nodeType":"284","messageId":"274","endLine":13,"endColumn":79},{"ruleId":"278","severity":1,"message":"295","line":2,"column":10,"nodeType":"276","messageId":"280","endLine":2,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":68,"column":24,"nodeType":"284","messageId":"274","endLine":68,"endColumn":67},{"ruleId":"271","severity":1,"message":"272","line":33,"column":33,"nodeType":"284","messageId":"274","endLine":33,"endColumn":54},{"ruleId":"271","severity":1,"message":"272","line":9,"column":22,"nodeType":"284","messageId":"274","endLine":9,"endColumn":56},{"ruleId":"278","severity":1,"message":"296","line":9,"column":10,"nodeType":"276","messageId":"280","endLine":9,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":123,"column":29,"nodeType":"284","messageId":"274","endLine":123,"endColumn":34},{"ruleId":"278","severity":1,"message":"297","line":149,"column":5,"nodeType":"276","messageId":"280","endLine":149,"endColumn":11},{"ruleId":"278","severity":1,"message":"298","line":151,"column":5,"nodeType":"276","messageId":"280","endLine":151,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":29,"column":27,"nodeType":"284","messageId":"274","endLine":29,"endColumn":54},{"ruleId":"271","severity":1,"message":"272","line":38,"column":8,"nodeType":"273","messageId":"274","endLine":38,"endColumn":74},{"ruleId":"271","severity":1,"message":"272","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":23},{"ruleId":"278","severity":1,"message":"299","line":9,"column":11,"nodeType":"276","messageId":"280","endLine":9,"endColumn":16},{"ruleId":"278","severity":1,"message":"300","line":9,"column":18,"nodeType":"276","messageId":"280","endLine":9,"endColumn":24},{"ruleId":"278","severity":1,"message":"297","line":9,"column":26,"nodeType":"276","messageId":"280","endLine":9,"endColumn":32},{"ruleId":"278","severity":1,"message":"301","line":9,"column":34,"nodeType":"276","messageId":"280","endLine":9,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":26,"column":8,"nodeType":"273","messageId":"274","endLine":26,"endColumn":23},{"ruleId":"278","severity":1,"message":"300","line":13,"column":11,"nodeType":"276","messageId":"280","endLine":13,"endColumn":17},{"ruleId":"278","severity":1,"message":"302","line":1,"column":17,"nodeType":"276","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"303","line":4,"column":19,"nodeType":"276","messageId":"280","endLine":4,"endColumn":29},{"ruleId":"278","severity":1,"message":"304","line":4,"column":31,"nodeType":"276","messageId":"280","endLine":4,"endColumn":40},{"ruleId":"278","severity":1,"message":"302","line":1,"column":17,"nodeType":"276","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"303","line":5,"column":19,"nodeType":"276","messageId":"280","endLine":5,"endColumn":29},{"ruleId":"278","severity":1,"message":"304","line":5,"column":31,"nodeType":"276","messageId":"280","endLine":5,"endColumn":40},{"ruleId":"278","severity":1,"message":"299","line":32,"column":11,"nodeType":"276","messageId":"280","endLine":32,"endColumn":16},{"ruleId":"278","severity":1,"message":"305","line":1,"column":8,"nodeType":"276","messageId":"280","endLine":1,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":28,"column":1,"nodeType":"273","messageId":"274","endLine":28,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":69,"column":16,"nodeType":"273","messageId":"274","endLine":69,"endColumn":67},{"ruleId":"271","severity":1,"message":"272","line":9,"column":22,"nodeType":"284","messageId":"274","endLine":9,"endColumn":56},{"ruleId":"278","severity":1,"message":"306","line":10,"column":3,"nodeType":"276","messageId":"280","endLine":10,"endColumn":14},{"ruleId":"278","severity":1,"message":"285","line":15,"column":10,"nodeType":"276","messageId":"280","endLine":15,"endColumn":18},{"ruleId":"278","severity":1,"message":"286","line":18,"column":10,"nodeType":"276","messageId":"280","endLine":18,"endColumn":17},{"ruleId":"278","severity":1,"message":"307","line":19,"column":10,"nodeType":"276","messageId":"280","endLine":19,"endColumn":20},{"ruleId":"278","severity":1,"message":"302","line":1,"column":28,"nodeType":"276","messageId":"280","endLine":1,"endColumn":36},{"ruleId":"278","severity":1,"message":"308","line":2,"column":10,"nodeType":"276","messageId":"280","endLine":2,"endColumn":21},{"ruleId":"278","severity":1,"message":"309","line":3,"column":10,"nodeType":"276","messageId":"280","endLine":3,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":9,"column":40,"nodeType":"284","messageId":"274","endLine":9,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":19,"column":38,"nodeType":"284","messageId":"274","endLine":19,"endColumn":43},{"ruleId":"278","severity":1,"message":"285","line":4,"column":10,"nodeType":"276","messageId":"280","endLine":4,"endColumn":18},{"ruleId":"278","severity":1,"message":"286","line":5,"column":10,"nodeType":"276","messageId":"280","endLine":5,"endColumn":17},{"ruleId":"278","severity":1,"message":"296","line":9,"column":10,"nodeType":"276","messageId":"280","endLine":9,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":129,"column":29,"nodeType":"284","messageId":"274","endLine":134,"endColumn":17},{"ruleId":"278","severity":1,"message":"310","line":135,"column":11,"nodeType":"276","messageId":"280","endLine":135,"endColumn":18},{"ruleId":"278","severity":1,"message":"311","line":135,"column":20,"nodeType":"276","messageId":"280","endLine":135,"endColumn":30},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'MovieDetails' is defined but never used.","unusedVar","'moviesCategory' is defined but never used.","'moviesSearch' is defined but never used.","'moviesReducer' is defined but never used.","ArrowFunctionExpression","'useFetch' is defined but never used.","'useAuth' is defined but never used.","'LoadFilterMovies' is defined but never used.","'style' is defined but never used.","'Status' is defined but never used.","'request' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'StringDecoder' is defined but never used.","'useHistory' is defined but never used.","'logout' is assigned a value but never used.","'isOpenLogin' is assigned a value but never used.","'login' is assigned a value but never used.","'singup' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useState' is defined but never used.","'singupType' is defined but never used.","'loginType' is defined but never used.","'React' is defined but never used.","'getFavorite' is defined but never used.","'MoviesList' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'movieId' is assigned a value but never used.","'media_type' is assigned a value but never used."]