[{"C:\\Front\\Movie-Search\\src\\index.tsx":"1","C:\\Front\\Movie-Search\\src\\serviceWorker.js":"2","C:\\Front\\Movie-Search\\src\\app\\App.tsx":"3","C:\\Front\\Movie-Search\\src\\app\\store.tsx":"4","C:\\Front\\Movie-Search\\src\\app\\Header.tsx":"5","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx":"6","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx":"7","C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx":"8","C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx":"9","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx":"10","C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx":"11","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx":"12","C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx":"13","C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx":"14","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx":"15","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx":"16","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx":"17","C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx":"18","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx":"19","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx":"20","C:\\Front\\Movie-Search\\src\\app\\image.tsx":"21","C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx":"22","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx":"23","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx":"24","C:\\Front\\Movie-Search\\src\\context\\authContext.tsx":"25","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx":"26","C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx":"27","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx":"28","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx":"29","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx":"30","C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx":"31","C:\\Front\\Movie-Search\\src\\app\\lib.tsx":"32","C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx":"33","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx":"34","C:\\Front\\Movie-Search\\src\\app\\Image.tsx":"35","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainer.tsx":"36","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerFavorite.tsx":"37","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerDetails.tsx":"38"},{"size":1293,"mtime":1618158164748,"results":"39","hashOfConfig":"40"},{"size":5086,"mtime":1614783138488,"results":"41","hashOfConfig":"40"},{"size":1101,"mtime":1618080020716,"results":"42","hashOfConfig":"40"},{"size":379,"mtime":1617812176929,"results":"43","hashOfConfig":"40"},{"size":2039,"mtime":1618134400114,"results":"44","hashOfConfig":"40"},{"size":1095,"mtime":1617619312957,"results":"45","hashOfConfig":"40"},{"size":1295,"mtime":1614783138477,"results":"46","hashOfConfig":"40"},{"size":1304,"mtime":1618161911373,"results":"47","hashOfConfig":"40"},{"size":4035,"mtime":1618160572713,"results":"48","hashOfConfig":"40"},{"size":2631,"mtime":1618160571612,"results":"49","hashOfConfig":"40"},{"size":2869,"mtime":1618162012305,"results":"50","hashOfConfig":"40"},{"size":1906,"mtime":1618161998139,"results":"51","hashOfConfig":"40"},{"size":1585,"mtime":1618058729007,"results":"52","hashOfConfig":"40"},{"size":5121,"mtime":1618160153328,"results":"53","hashOfConfig":"40"},{"size":1579,"mtime":1618155903066,"results":"54","hashOfConfig":"40"},{"size":676,"mtime":1617812176939,"results":"55","hashOfConfig":"40"},{"size":768,"mtime":1618080179654,"results":"56","hashOfConfig":"40"},{"size":1699,"mtime":1617869278735,"results":"57","hashOfConfig":"40"},{"size":201,"mtime":1614783138487,"results":"58","hashOfConfig":"40"},{"size":1475,"mtime":1618155903561,"results":"59","hashOfConfig":"40"},{"size":641,"mtime":1617734350348,"results":"60","hashOfConfig":"40"},{"size":5747,"mtime":1618155900758,"results":"61","hashOfConfig":"40"},{"size":1204,"mtime":1618160942395,"results":"62","hashOfConfig":"40"},{"size":3075,"mtime":1618128707785,"results":"63","hashOfConfig":"40"},{"size":3552,"mtime":1617812176930,"results":"64","hashOfConfig":"40"},{"size":493,"mtime":1617196304938,"results":"65","hashOfConfig":"40"},{"size":2099,"mtime":1618133263934,"results":"66","hashOfConfig":"40"},{"size":1180,"mtime":1618160869907,"results":"67","hashOfConfig":"40"},{"size":2034,"mtime":1617869799965,"results":"68","hashOfConfig":"40"},{"size":1957,"mtime":1618155905079,"results":"69","hashOfConfig":"40"},{"size":572,"mtime":1617867478138,"results":"70","hashOfConfig":"40"},{"size":1458,"mtime":1618133460161,"results":"71","hashOfConfig":"40"},{"size":1444,"mtime":1618155903859,"results":"72","hashOfConfig":"40"},{"size":1669,"mtime":1617812176928,"results":"73","hashOfConfig":"40"},{"size":641,"mtime":1617734350348,"results":"74","hashOfConfig":"40"},{"size":2150,"mtime":1618161135468,"results":"75","hashOfConfig":"40"},{"size":748,"mtime":1618126743658,"results":"76","hashOfConfig":"40"},{"size":1831,"mtime":1618160174241,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"phhbyg",{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"81"},"C:\\Front\\Movie-Search\\src\\index.tsx",["169"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\r\nimport { AuthProvider } from './context/authContext'\r\nimport firebase from 'firebase/app'\r\nimport store from './app/store'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './app/App'\r\nimport './style/app.css'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: 'AIzaSyCxdPvr7NzjTO47p9_GCTcoBnSiIGUGxWA',\r\n  authDomain: 'movies-search-35388.firebaseapp.com',\r\n  projectId: 'movies-search-35388',\r\n  storageBucket: 'movies-search-35388.appspot.com',\r\n  messagingSenderId: '558665270121',\r\n  appId: '1:558665270121:web:56e191207195258c4fb3f8',\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const db = firebase.firestore()\r\n\r\nReactDOM.render(\r\n  <AuthProvider>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </AuthProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n",[],"C:\\Front\\Movie-Search\\src\\serviceWorker.js",["170","171","172"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",[],"C:\\Front\\Movie-Search\\src\\app\\App.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\store.tsx",["173"],"import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport moviesReducer from './../features/movies/moviesSlice'\r\nimport filterReducer from './../features/filter/filterSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // movies: moviesReducer,\r\n    filter: filterReducer,\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","C:\\Front\\Movie-Search\\src\\app\\Header.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx",["174"],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx",["175","176"],"import React, { useEffect, useRef } from 'react'\r\nimport { NavLink, useLocation, useHistory } from 'react-router-dom'\r\nimport github from './../style/github.svg'\r\nimport styled from 'styled-components'\r\nimport { device } from './lib'\r\n// import style from './navbar.module.css'\r\nimport Toggle from './Toggle'\r\nimport { useClickOutSide } from './../hooks/useClickOutSide'\r\n\r\nconst Nav = styled.nav`\r\n  grid-area: nv;\r\n  font-size: 20px;\r\n  transition: ease 0.3s;\r\n  media ${device.laptopM} {\r\n    justify-self: center;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media ${device.laptopM} {\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    z-index: 100;\r\n    left: 0;\r\n    bottom: -350px;\r\n    width: 250px;\r\n    background-color: #212121;\r\n    -webkit-font-smoothing: antialiased;\r\n    transform-origin: 0% 0%;\r\n    transform: translate(-100%, 0);\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);\r\n  }\r\n`\r\n\r\nconst ListHidden = styled(List)`\r\n  transform: none;\r\n`\r\n\r\nconst Item = styled.li`\r\n  cursor: pointer;\r\n  @media ${device.laptopM} {\r\n    width: 100%;\r\n    margin-left: 40px;\r\n    display: block;\r\n  }\r\n  @media ${device.mobileM} {\r\n    margin-left: 0;\r\n  }\r\n`\r\nconst activeClassName = 'nav-item-active'\r\n\r\nconst Link = styled(NavLink).attrs({ activeClassName })`\r\n  &.${activeClassName} {\r\n    &::after {\r\n      transform: scaleY(1);\r\n    }\r\n    @media ${device.laptopM} {\r\n      background-color: #252525;\r\n    }\r\n  }\r\n  display: inline-block;\r\n  color: #fff;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  position: relative;\r\n  transition: color 0.3s ease;\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 4px;\r\n    bottom: 0px;\r\n    left: 0;\r\n    transform: scaleY(0);\r\n    transform-origin: bottom;\r\n    transition: transform 235ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding-left: 25px;\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst LinkGit = styled.a`\r\n  @media ${device.laptopM} {\r\n    margin-left: 25px;\r\n    padding-bottom: 20px;\r\n    display: inline-block;\r\n  }\r\n`\r\n\r\nconst Icon = styled.img`\r\n  transition: opacity 0.3s ease;\r\n  width: 25px;\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport function Navbar(): JSX.Element {\r\n  const wrapperRef = useRef<HTMLElement | null>(null)\r\n  const history = useHistory()\r\n  const [isHidden, setHidden] = React.useState<boolean>(true)\r\n\r\n  useClickOutSide(wrapperRef, () => {\r\n    document.body.classList.remove('overlay')\r\n    setHidden(true)\r\n  })\r\n\r\n  history.listen(() => {\r\n    setHidden(true)\r\n    document.body.classList.remove('overlay')\r\n  })\r\n\r\n  const handleClickBtn = () => {\r\n    if (isHidden) {\r\n      setHidden(false)\r\n      document.body.classList.toggle('overlay')\r\n    } else {\r\n      setHidden(true)\r\n      document.body.classList.toggle('overlay')\r\n    }\r\n  }\r\n\r\n  const Items = isHidden ? List : ListHidden\r\n  return (\r\n    <Nav ref={wrapperRef}>\r\n      <Toggle isHidden={isHidden} onClick={() => handleClickBtn()} />\r\n      <Items>\r\n        <Item>\r\n          <Link exact to='/'>\r\n            Popular\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/upcoming'>Up comning</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/top_rated'>Top rated</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/favorite'>Favorite</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/filter'>Filter</Link>\r\n        </Item>\r\n        <Item>\r\n          <LinkGit\r\n            href='https://github.com/ethnicolr/Movie-Search'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <Icon src={github} alt='github' width='40' />\r\n          </LinkGit>\r\n        </Item>\r\n      </Items>\r\n    </Nav>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx",[],"C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx",[],"C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx",["177"],"import axios from 'axios'\r\nimport { request } from 'http'\r\nexport const API_KEY = 'api_key=33691dc9097a0a10121b027c1856edd7'\r\n\r\nexport interface Details {\r\n  id: string\r\n  title: string\r\n  vote_average: number\r\n  poster_path: string | null\r\n  overview: string\r\n  tagline: string\r\n  release_date: string\r\n  first_air_date: string\r\n  genres: [{ name: string; id: string }]\r\n  runtime: number\r\n  episode_run_time: number\r\n  name: string\r\n  production_countries: [{ name: string }]\r\n  media_type?: string\r\n  budget: number\r\n}\r\n\r\nexport interface MovieType {\r\n  id: string\r\n  title: string\r\n  vote_average: number\r\n  poster_path: string | null\r\n  release_date: string\r\n  first_air_date: string\r\n  name: string\r\n  media_type: string\r\n}\r\n\r\nexport interface MoviesResult {\r\n  page: number\r\n  totalPages: number\r\n  moviesList: MovieType[]\r\n}\r\n\r\nexport interface Options {\r\n  pathname: keyof typeof getUrl | '/favorite'\r\n  search?: string\r\n  page?: number\r\n  genres?: string[]\r\n  sortBy?: string\r\n  movieId?: string\r\n  mediaType?: string\r\n}\r\n\r\nexport interface Genre {\r\n  id: string\r\n  name: string\r\n  selected: boolean\r\n}\r\n\r\ninterface GenresProps {\r\n  genres: Genre[]\r\n}\r\n\r\nexport const getUrl = {\r\n  '/search': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/search/multi?&${API_KEY}&query=${options.search}&page=${options.page}`,\r\n  '/top_rated': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/top_rated?&${API_KEY}&page=${options.page}`,\r\n  '/upcoming': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/upcoming?&${API_KEY}&page=${options.page}`,\r\n  '/popular': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/popular?&${API_KEY}&page=${options.page}`,\r\n  '/': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/popular?&${API_KEY}&page=${options.page}`,\r\n  '/movie': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/${options.movieId}?&${API_KEY}&language=en-US`,\r\n  '/tv': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/tv/${options.movieId}?&${API_KEY}&language=en-US`,\r\n  '/filter': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/discover/movie?&${API_KEY}&language=en-US&sort_by=${options.sortBy}&include_adult=false&include_video=false&page=${options.page}&with_genres=${options.genres}`,\r\n  '/credits': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/${options.movieId}/credits?&${API_KEY}&language=en-US`,\r\n  '/similar': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/${options.mediaType}/${options.movieId}/similar?&${API_KEY}&language=en-USpage=1`,\r\n  '/favorite': (options: Options): string =>\r\n    `https://api.themoviedb.org/3/movie/${options.movieId}?&${API_KEY}&language=en-US`,\r\n}\r\n\r\nexport type fetchMovieType = keyof typeof getUrl\r\n\r\nexport type pathnameType = keyof typeof getUrl | '/favorite'\r\n\r\ninterface Cast {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport interface DetailsResult {\r\n  movieDetails: Details\r\n  cast: Cast[]\r\n}\r\n\r\nexport type Status = 'indle' | 'fetching' | 'fetched' | 'error'\r\n\r\nexport const fetchSeach = async (\r\n  search: string,\r\n  page: number\r\n): Promise<MoviesResult> => {\r\n  const url = `//api.themoviedb.org/3/search/multi?&${API_KEY}&query=${search}&page=${page}`\r\n  const searchResponse = await fetch(url)\r\n  const searchList = await searchResponse.json()\r\n  return searchList\r\n}\r\n\r\nexport async function getMovies(options: Options): Promise<MoviesResult> {\r\n  const path = options.pathname\r\n\r\n  const url = getUrl[path](options)\r\n  const moviesResponse = await axios.get(url)\r\n  const { page, total_pages, results } = moviesResponse.data\r\n  return {\r\n    moviesList: results,\r\n    totalPages: total_pages,\r\n    page,\r\n  }\r\n}\r\n\r\nexport async function getDetails(\r\n  movieId: string,\r\n  mediaType = 'movie'\r\n): Promise<DetailsResult> {\r\n  const detailsUrl = `https://api.themoviedb.org/3/${mediaType}/${movieId}?&${API_KEY}&language=en-US`\r\n  console.log(detailsUrl)\r\n  const castUrl = `https://api.themoviedb.org/3/${mediaType}/${movieId}/credits?&${API_KEY}&language=en-US`\r\n  try {\r\n    const detailsResponse = await axios.get(detailsUrl)\r\n    const creditsResponse = await axios.get(castUrl)\r\n    return {\r\n      movieDetails: detailsResponse.data,\r\n      cast: creditsResponse.data.cast,\r\n    }\r\n  } catch (err) {\r\n    throw err.message\r\n  }\r\n}\r\n\r\nexport async function getFavorite(list: string[]): Promise<MovieType[]> {\r\n  try {\r\n    const favoriteList = await Promise.all(\r\n      list.map(async (id) => {\r\n        const url = getUrl['/favorite']({ movieId: id, pathname: '/favorite' })\r\n        const response = await axios.get(url)\r\n        return response.data\r\n      })\r\n    )\r\n    return favoriteList\r\n  } catch (err) {\r\n    throw err.message\r\n  }\r\n}\r\n\r\nexport async function gethGenres(): Promise<GenresProps> {\r\n  const url = `https://api.themoviedb.org/3/genre/movie/list?${API_KEY}&language=en-US`\r\n  const { data } = await axios.get(url)\r\n  return data\r\n}\r\n\r\nexport const genresUrl = `https://api.themoviedb.org/3/genre/movie/list?${API_KEY}&language=en-US`\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx",["178"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport seach from './../../style/search.svg'\r\n\r\ninterface InputProps {\r\n  onSearchChange(value: string): void\r\n  onSearchSubmit(value: string): void\r\n}\r\n\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  padding-left: 40px;\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border-bottom: 1px solid #0f9fbf;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 30px;\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 13px;\r\n  outline: none;\r\n`\r\n\r\nexport const MoviesSearchInput = ({\r\n  onSearchChange,\r\n  onSearchSubmit,\r\n}: InputProps): JSX.Element => {\r\n  const [value, setValue] = useState('')\r\n  const inputEl = React.useRef<HTMLInputElement>(null!)\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    const value = e.currentTarget.value\r\n    setValue(value)\r\n    onSearchChange(value)\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n    if (value.length) {\r\n      onSearchSubmit(value)\r\n      inputEl.current.blur()\r\n      document.body.style.overflow = 'auto'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          ref={inputEl}\r\n          type='text'\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder='Seacrh movie...'\r\n        />\r\n        <Button>\r\n          <img src={seach} alt='seach' />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx",["179","180"],"import React from 'react'\r\nimport { StringDecoder } from 'string_decoder'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`\r\nconst Dots = styled.div`\r\n  padding: 5px;\r\n`\r\n\r\ntype DotProps = {\r\n  bgColor?: string\r\n  width?: string\r\n  height?: string\r\n}\r\nconst Dot = styled.div<DotProps>`\r\n  width: ${(props) => props.width || '20px'};\r\n  height: ${(props) => props.height || '20px'};\r\n  background-color: transparent;\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  &::after {\r\n    transform: scale(0.2);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    content: '';\r\n    border-radius: 50%;\r\n    background-color: ${(props) => props.bgColor || '#000000'};\r\n    width: ${(props) => props.width || '20px'};\r\n    height: ${(props) => props.height || '20px'};\r\n    display: inline-block;\r\n    animation-name: scale;\r\n    animation-duration: 900ms;\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  &:nth-child(2)::after {\r\n    animation-delay: 150ms;\r\n  }\r\n\r\n  &:nth-child(3)::after {\r\n    animation-delay: 300ms;\r\n  }\r\n\r\n  @keyframes scale {\r\n    0% {\r\n      transform: scale(0.2);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0.2);\r\n    }\r\n  }\r\n`\r\n\r\ntype SpinnerProps = {\r\n  color?: string\r\n  width?: string\r\n  height?: string\r\n}\r\n\r\nexport const Spinner = ({ color, width, height }: SpinnerProps) => {\r\n  return (\r\n    <Container>\r\n      <Dots>\r\n        <Dot width={width} height={height} bgColor={color} />\r\n        <Dot width={width} height={height} bgColor={color} />\r\n        <Dot width={width} height={height} bgColor={color} />\r\n      </Dots>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\image.tsx",["181"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx",[],"C:\\Front\\Movie-Search\\src\\context\\authContext.tsx",["182"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\nimport { auth, db } from './../index'\r\n\r\nexport type singupType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type loginType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type logoutType = () => Promise<void>\r\n\r\ninterface ValueProps {\r\n  currentUser: firebase.User | null\r\n  singup: singupType\r\n  login: loginType\r\n  logout: logoutType\r\n  handleLoginModal: (value: boolean) => void\r\n  handleSingUpModal: (value: boolean) => void\r\n  addToStorage: (id: string) => Promise<void>\r\n  deleteFromStorage: (id: string) => Promise<void>\r\n  favoriteList: string[]\r\n  isOpenLogin: boolean\r\n  isOpenSingUp: boolean\r\n}\r\n\r\nconst AuthContext = React.createContext({} as ValueProps)\r\n\r\nexport function useAuth(): ValueProps {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null)\r\n  const [favoriteList, setFavoriteList] = useState<string[]>([])\r\n  const [isOpenLogin, setModalLogin] = useState(false)\r\n  const [isOpenSingUp, setModalSingUp] = useState(false)\r\n\r\n  const singup: singupType = (email, password) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const login: loginType = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const logout: logoutType = () => {\r\n    console.log('test')\r\n    return auth.signOut()\r\n  }\r\n  const handleLoginModal = (value: boolean) => {\r\n    setModalLogin(value)\r\n  }\r\n\r\n  const handleSingUpModal = (value: boolean) => {\r\n    setModalSingUp(value)\r\n  }\r\n\r\n  const getFaviriteList = async (\r\n    docRef: firebase.firestore.DocumentReference\r\n  ) => {\r\n    const userData = await docRef.get()\r\n    const favorite = userData.data()?.favorite as string[]\r\n    return favorite\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const docRef = db.collection('users').doc(user.uid)\r\n        docRef.get().then(async (doc) => {\r\n          if (!doc.exists) {\r\n            db.collection('users')\r\n              .doc(user.uid)\r\n              .set({ email: user.email, favorite: [] })\r\n          } else {\r\n            const favorite = await getFaviriteList(docRef)\r\n            setFavoriteList(favorite)\r\n          }\r\n        })\r\n      } else {\r\n        setFavoriteList([])\r\n      }\r\n\r\n      setCurrentUser(user)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const addToStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = [...favoriteList, id]\r\n      docRef.update('favorite', newList)\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const deleteFromStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = favoriteList.filter((movie) => movie !== id)\r\n      docRef.update('favorite', [...newList])\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const value: ValueProps = {\r\n    currentUser,\r\n    favoriteList,\r\n    isOpenLogin,\r\n    isOpenSingUp,\r\n    addToStorage,\r\n    deleteFromStorage,\r\n    singup,\r\n    login,\r\n    logout,\r\n    handleLoginModal,\r\n    handleSingUpModal,\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx",["183","184","185","186","187"],"C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx",["188","189","190"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '../../app/Spinner'\r\nimport { useAuth, singupType, loginType } from '../../context/authContext'\r\nimport { Input, FormGroup, Form, Button } from './../../app/lib'\r\nimport { useAsync } from './../../hooks/useAsync'\r\n\r\nconst LoginButton = styled(Button)`\r\n  background-color: #0b0b0b;\r\n  color: #fff;\r\n  width: 100%;\r\n`\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  color: #0366d6;\r\n`\r\nconst LinkContainer = styled.p`\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  border: 1px solid var(--color-border-tertiary);\r\n  border-radius: 6px;\r\n  font-weight: 400;\r\n`\r\n\r\ntype FormProps = {\r\n  showRegister: () => void\r\n}\r\n\r\nexport function AuthLogin({ showRegister }: FormProps): JSX.Element {\r\n  const { login } = useAuth()\r\n\r\n  const { run, error, isLoading, isError } = useAsync()\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    const target = e.target as typeof e.target & {\r\n      email: { value: string }\r\n      password: { value: string }\r\n    }\r\n    const email = target.email.value\r\n    const password = target.password.value\r\n\r\n    run(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <label htmlFor='email'>Email</label>\r\n        <Input id='email' type='text' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='password'>Password</label>\r\n        <Input id='password' type='password' />\r\n      </FormGroup>\r\n      <div>\r\n        <LoginButton type='submit'>\r\n          {isLoading ? (\r\n            <Spinner color={'#fff'} width={'15px'} height={'15px'} />\r\n          ) : (\r\n            'Login'\r\n          )}\r\n        </LoginButton>\r\n      </div>\r\n      <FormGroup>{isError && <p>{error}</p>}</FormGroup>\r\n\r\n      <LinkContainer>\r\n        Need account?\r\n        <Link onClick={showRegister}> Create an account.</Link>\r\n      </LinkContainer>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx",[],"C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\lib.tsx",[],"C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx",["191"],"import { Reducer, useReducer, useCallback } from 'react'\r\n\r\ntype State<T> = {\r\n  data: null | T\r\n  status: string\r\n  error: null | string\r\n}\r\n\r\ntype Action<T> =\r\n  | { type: 'pending' }\r\n  | { type: 'resolved'; data: T }\r\n  | { type: 'rejected'; error: string }\r\n\r\nfunction asyncReducer<T>(state: State<T>, action: Action<T>): State<T> {\r\n  switch (action.type) {\r\n    case 'pending': {\r\n      return { status: 'pending', data: null, error: null }\r\n    }\r\n    case 'resolved': {\r\n      return { status: 'resolved', data: action.data, error: null }\r\n    }\r\n    case 'rejected': {\r\n      return { status: 'rejected', data: null, error: action.error }\r\n    }\r\n  }\r\n}\r\n\r\nfunction useAsync<T>() {\r\n  const [state, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(\r\n    asyncReducer,\r\n    {\r\n      status: 'idle',\r\n      data: null,\r\n      error: null,\r\n    }\r\n  )\r\n\r\n  const { data, error, status } = state\r\n\r\n  const run = useCallback((promise: Promise<T>) => {\r\n    dispatch({ type: 'pending' })\r\n    promise.then(\r\n      (data) => {\r\n        dispatch({ type: 'resolved', data })\r\n      },\r\n      (error: Error) => {\r\n        dispatch({ type: 'rejected', error: error.message })\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  return {\r\n    isIdle: status === 'idle',\r\n    isLoading: status === 'pending',\r\n    isError: status === 'rejected',\r\n    isSuccess: status === 'resolved',\r\n    error,\r\n    status,\r\n    data,\r\n    run,\r\n  }\r\n}\r\n\r\nexport { useAsync }\r\n","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx",["192"],"import React from 'react'\r\nimport { device } from './lib'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: none;\r\n  z-index: 1;\r\n  position: relative;\r\n  span {\r\n    display: none;\r\n    width: 33px;\r\n    height: 4px;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    background: #ffffff;\r\n    border-radius: 3px;\r\n    z-index: 1;\r\n    transform-origin: 4px 0px;\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),\r\n      background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    span {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  span:first-child {\r\n    transform-origin: 0% 0%;\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform-origin: 0% 100%;\r\n  }\r\n`\r\nconst ContainerHidden = styled(Container)`\r\n  span {\r\n    opacity: 1;\r\n    transform: rotate(45deg) translate(-2px, -1px);\r\n    background: #ffffff;\r\n  }\r\n\r\n  span:nth-last-child(2) {\r\n    opacity: 0;\r\n    transform: rotate(0deg) scale(0.2, 0.2);\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform: rotate(-45deg) translate(0, -1px);\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 32px;\r\n  position: absolute;\r\n  top: -7px;\r\n  left: -5px;\r\n  z-index: 2;\r\n  outline: none;\r\n`\r\n\r\ntype PropsToggle = {\r\n  isHidden: boolean\r\n  onClick: () => void\r\n}\r\n\r\nexport default function Toggle({ isHidden, onClick }: PropsToggle) {\r\n  const СonditionContainer = isHidden ? Container : ContainerHidden\r\n  return (\r\n    <СonditionContainer>\r\n      <Button onClick={onClick}></Button>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </СonditionContainer>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Image.tsx",["193"],"import React, { useState, useEffect } from 'react'\r\nimport error from './../style/error.png'\r\n\r\ninterface Props {\r\n  src: string\r\n  size?: string\r\n}\r\n\r\nexport const Image = ({ src, size = '100%' }: Props) => {\r\n  const [fallback, setFallback] = useState(src)\r\n  const [errored, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setFallback(src)\r\n  }, [src])\r\n\r\n  const handleError = () => {\r\n    if (!errored) {\r\n      setError(true)\r\n      setFallback(error)\r\n    }\r\n  }\r\n\r\n  const style = {\r\n    width: size,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={fallback} onError={handleError} alt='poster' style={style} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainer.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerFavorite.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesContainerDetails.tsx",["194"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAuth } from './../../context/authContext'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { MovieDetails } from './MovieDetails'\r\nimport { useAsync } from '../../hooks/useAsync'\r\nimport {\r\n  DetailsResult,\r\n  getDetails,\r\n  getMovies,\r\n  MoviesResult,\r\n} from '../../api/movieApi'\r\n\r\ninterface PropsParams {\r\n  movieId: string\r\n  media_type: string\r\n}\r\n\r\nexport const MovieContainerDetails = (): JSX.Element | null => {\r\n  const { movieId, media_type } = useParams<PropsParams>()\r\n  const location = useLocation()\r\n  const {\r\n    currentUser,\r\n    handleLoginModal,\r\n    addToStorage,\r\n    deleteFromStorage,\r\n    favoriteList,\r\n  } = useAuth()\r\n  const {\r\n    data: dataDetails,\r\n    run: fetchDetails,\r\n    status: statusDetails,\r\n  } = useAsync<DetailsResult>()\r\n  const {\r\n    data: dataSimilar,\r\n    run: fetchSimilar,\r\n    status: statusSimilar,\r\n  } = useAsync<MoviesResult>()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [location.key])\r\n\r\n  useEffect(() => {\r\n    fetchSimilar(\r\n      getMovies({ pathname: '/similar', movieId, mediaType: media_type })\r\n    )\r\n    fetchDetails(getDetails(movieId, media_type))\r\n  }, [movieId])\r\n\r\n  const isFavorite = favoriteList.some((id) => id == movieId)\r\n\r\n  const handleFavorite = (id: string) => {\r\n    if (!currentUser) {\r\n      handleLoginModal(true)\r\n      return\r\n    }\r\n    isFavorite ? deleteFromStorage(id) : addToStorage(id)\r\n  }\r\n\r\n  return (\r\n    dataDetails &&\r\n    dataSimilar && (\r\n      <MovieDetails\r\n        data={dataDetails}\r\n        onFavorite={handleFavorite}\r\n        isFavorite={isFavorite}\r\n        similarMovie={dataSimilar.moviesList}\r\n        statusSimilar={statusSimilar}\r\n        favoriteList={favoriteList}\r\n      />\r\n    )\r\n  )\r\n}\r\n",{"ruleId":"195","severity":1,"message":"196","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":23,"column":8,"nodeType":"201","messageId":"202","endLine":23,"endColumn":33},{"ruleId":"199","severity":1,"message":"203","line":23,"column":26,"nodeType":"197","messageId":"204","endLine":23,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":129,"column":8,"nodeType":"201","messageId":"202","endLine":129,"endColumn":29},{"ruleId":"195","severity":1,"message":"205","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":21},{"ruleId":"195","severity":1,"message":"206","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":17},{"ruleId":"195","severity":1,"message":"207","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"208","line":2,"column":19,"nodeType":"197","messageId":"198","endLine":2,"endColumn":30},{"ruleId":"195","severity":1,"message":"209","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":36,"column":50,"nodeType":"212","messageId":"213","endLine":36,"endColumn":55},{"ruleId":"195","severity":1,"message":"214","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":68,"column":24,"nodeType":"215","messageId":"202","endLine":68,"endColumn":67},{"ruleId":"199","severity":1,"message":"200","line":9,"column":22,"nodeType":"215","messageId":"202","endLine":9,"endColumn":56},{"ruleId":"199","severity":1,"message":"200","line":38,"column":8,"nodeType":"201","messageId":"202","endLine":38,"endColumn":74},{"ruleId":"199","severity":1,"message":"200","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":23},{"ruleId":"195","severity":1,"message":"216","line":9,"column":11,"nodeType":"197","messageId":"198","endLine":9,"endColumn":16},{"ruleId":"195","severity":1,"message":"217","line":9,"column":18,"nodeType":"197","messageId":"198","endLine":9,"endColumn":24},{"ruleId":"195","severity":1,"message":"218","line":9,"column":26,"nodeType":"197","messageId":"198","endLine":9,"endColumn":32},{"ruleId":"195","severity":1,"message":"219","line":9,"column":34,"nodeType":"197","messageId":"198","endLine":9,"endColumn":45},{"ruleId":"195","severity":1,"message":"220","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"221","line":4,"column":19,"nodeType":"197","messageId":"198","endLine":4,"endColumn":29},{"ruleId":"195","severity":1,"message":"222","line":4,"column":31,"nodeType":"197","messageId":"198","endLine":4,"endColumn":40},{"ruleId":"199","severity":1,"message":"200","line":28,"column":1,"nodeType":"201","messageId":"202","endLine":28,"endColumn":23},{"ruleId":"199","severity":1,"message":"200","line":69,"column":16,"nodeType":"201","messageId":"202","endLine":69,"endColumn":67},{"ruleId":"199","severity":1,"message":"200","line":9,"column":22,"nodeType":"215","messageId":"202","endLine":9,"endColumn":56},{"ruleId":"195","severity":1,"message":"223","line":32,"column":13,"nodeType":"197","messageId":"198","endLine":32,"endColumn":26},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","missingArgType","'moviesReducer' is defined but never used.","'useAuth' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'request' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'StringDecoder' is defined but never used.","ArrowFunctionExpression","'login' is assigned a value but never used.","'singup' is assigned a value but never used.","'logout' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useState' is defined but never used.","'singupType' is defined but never used.","'loginType' is defined but never used.","'statusDetails' is assigned a value but never used."]