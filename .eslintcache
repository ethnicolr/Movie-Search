[{"C:\\Front\\Movie-Search\\src\\index.tsx":"1","C:\\Front\\Movie-Search\\src\\serviceWorker.js":"2","C:\\Front\\Movie-Search\\src\\app\\App.tsx":"3","C:\\Front\\Movie-Search\\src\\app\\store.tsx":"4","C:\\Front\\Movie-Search\\src\\app\\Header.tsx":"5","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadCategory.tsx":"6","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFavorite.tsx":"7","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadSearch.tsx":"8","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx":"9","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx":"10","C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx":"11","C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx":"12","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx":"13","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListPage.tsx":"14","C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx":"15","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx":"16","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFilter.tsx":"17","C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx":"18","C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx":"19","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx":"20","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx":"21","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx":"22","C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx":"23","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx":"24","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx":"25","C:\\Front\\Movie-Search\\src\\app\\image.tsx":"26","C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx":"27","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx":"28","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx":"29","C:\\Front\\Movie-Search\\src\\context\\authContext.tsx":"30","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx":"31","C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx":"32","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx":"33","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthForm.tsx":"34","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx":"35","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx":"36","C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx":"37","C:\\Front\\Movie-Search\\src\\app\\lib.tsx":"38","C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx":"39","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx":"40","C:\\Front\\Movie-Search\\src\\app\\Image.tsx":"41"},{"size":1287,"mtime":1617609113844,"results":"42","hashOfConfig":"43"},{"size":5086,"mtime":1614783138488,"results":"44","hashOfConfig":"43"},{"size":1057,"mtime":1617621636118,"results":"45","hashOfConfig":"43"},{"size":379,"mtime":1617620850011,"results":"46","hashOfConfig":"43"},{"size":1704,"mtime":1617733495895,"results":"47","hashOfConfig":"43"},{"size":806,"mtime":1614783138482,"results":"48","hashOfConfig":"43"},{"size":794,"mtime":1617707205648,"results":"49","hashOfConfig":"43"},{"size":716,"mtime":1614783138483,"results":"50","hashOfConfig":"43"},{"size":1095,"mtime":1617619312957,"results":"51","hashOfConfig":"43"},{"size":1295,"mtime":1614783138477,"results":"52","hashOfConfig":"43"},{"size":1250,"mtime":1617712597906,"results":"53","hashOfConfig":"43"},{"size":3868,"mtime":1617708169714,"results":"54","hashOfConfig":"43"},{"size":2918,"mtime":1617647038165,"results":"55","hashOfConfig":"43"},{"size":1138,"mtime":1617698917762,"results":"56","hashOfConfig":"43"},{"size":2873,"mtime":1617713256467,"results":"57","hashOfConfig":"43"},{"size":1772,"mtime":1617713985292,"results":"58","hashOfConfig":"43"},{"size":956,"mtime":1614783138482,"results":"59","hashOfConfig":"43"},{"size":1585,"mtime":1614783138487,"results":"60","hashOfConfig":"43"},{"size":4871,"mtime":1617811709527,"results":"61","hashOfConfig":"43"},{"size":1566,"mtime":1617647786642,"results":"62","hashOfConfig":"43"},{"size":676,"mtime":1617647123210,"results":"63","hashOfConfig":"43"},{"size":744,"mtime":1617706850756,"results":"64","hashOfConfig":"43"},{"size":1255,"mtime":1617790378279,"results":"65","hashOfConfig":"43"},{"size":201,"mtime":1614783138487,"results":"66","hashOfConfig":"43"},{"size":1514,"mtime":1617734405875,"results":"67","hashOfConfig":"43"},{"size":641,"mtime":1617734350348,"results":"68","hashOfConfig":"43"},{"size":6427,"mtime":1617734633558,"results":"69","hashOfConfig":"43"},{"size":1000,"mtime":1617697098038,"results":"70","hashOfConfig":"43"},{"size":3080,"mtime":1617734353864,"results":"71","hashOfConfig":"43"},{"size":3552,"mtime":1617619920700,"results":"72","hashOfConfig":"43"},{"size":493,"mtime":1617196304938,"results":"73","hashOfConfig":"43"},{"size":1920,"mtime":1617783496225,"results":"74","hashOfConfig":"43"},{"size":1089,"mtime":1617791117234,"results":"75","hashOfConfig":"43"},{"size":1357,"mtime":1617196471178,"results":"76","hashOfConfig":"43"},{"size":2179,"mtime":1617806919702,"results":"77","hashOfConfig":"43"},{"size":1591,"mtime":1617621834671,"results":"78","hashOfConfig":"43"},{"size":472,"mtime":1617640128075,"results":"79","hashOfConfig":"43"},{"size":2442,"mtime":1617790918030,"results":"80","hashOfConfig":"43"},{"size":1451,"mtime":1617454915556,"results":"81","hashOfConfig":"43"},{"size":1669,"mtime":1617708179973,"results":"82","hashOfConfig":"43"},{"size":641,"mtime":1617734350348,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"phhbyg",{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"86"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"86"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"86"},"C:\\Front\\Movie-Search\\src\\index.tsx",[],[],"C:\\Front\\Movie-Search\\src\\serviceWorker.js",["196","197","198"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",[],"C:\\Front\\Movie-Search\\src\\app\\App.tsx",["199"],"import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport { Header } from './Header'\r\nimport { MovieDetails } from '../features/movies/MovieDetails'\r\nimport { FilterPage } from '../features/filter/filerPage'\r\nimport { moviesCategory } from '../features/movies/moviesLoadCategory'\r\nimport { moviesSearch } from '../features/movies/moviesLoadSearch'\r\nimport { moviesFavorite } from '../features/movies/moviesLoadFavorite'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={moviesCategory} />\r\n        <Route exact path='/upcoming' component={moviesCategory} />\r\n        <Route exact path='/top_rated' component={moviesCategory} />\r\n        <Route exact path='/favorite' component={moviesFavorite} />\r\n        <Route exact path='/search' component={moviesSearch} />\r\n        <Route exact path='/filter' component={FilterPage} />\r\n        <Route exact path={`/:media_type/:movieId`} component={MovieDetails} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Front\\Movie-Search\\src\\app\\store.tsx",["200"],"import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport moviesReducer from './../features/movies/moviesSlice'\r\nimport filterReducer from './../features/filter/filterSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // movies: moviesReducer,\r\n    filter: filterReducer,\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store\r\n","C:\\Front\\Movie-Search\\src\\app\\Header.tsx",["201"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { MoviesSearchPage } from '../features/search/moviesSearchPage'\r\nimport { Navbar } from './Navbar'\r\nimport { Auth } from '../features/auth/Auth'\r\nimport { device, Title } from './lib'\r\nimport logo from './../style/react-logo.png'\r\n\r\nconst Head = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 200;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  background-color: #0b0b0b;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-areas:\r\n    '  lg lg in in at'\r\n    ' nv nv nv nv nv ';\r\n  width: 80%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding-top: 18px;\r\n  align-items: center;\r\n\r\n  @media ${device.laptopM} {\r\n    padding-bottom: 25px;\r\n    width: auto;\r\n    margin: 0 25px;\r\n    grid-template-columns: repeat(9, 1fr);\r\n    grid-template-areas:\r\n      'nv . . lg lg lg . . .'\r\n      '. in in in in in in in .';\r\n  }\r\n\r\n  @media ${device.mobileM} {\r\n    grid-template-areas:\r\n      'nv . . lg lg lg . . .'\r\n      'in in in in in in in in in';\r\n    margin: 0 15px;\r\n  }\r\n`\r\n\r\nconst Logo = styled(Link)`\r\n  grid-area: lg;\r\n  display: flex;\r\n  justify-self: center;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 50;\r\n  img {\r\n    width: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Head>\r\n      <Container>\r\n        <Logo to='/'>\r\n          <img src={logo} alt='logo' />\r\n          <Title size={'40px'}>Movies-Search</Title>\r\n        </Logo>\r\n\r\n        <MoviesSearchPage />\r\n        <Auth />\r\n        <Navbar />\r\n      </Container>\r\n    </Head>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadCategory.tsx",["202"],"import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { fetchMovieType } from '../../api/movieApi'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { MoviesListPage } from './moviesListPage'\r\nimport { OnPageChangeCallback } from './moviesPagination'\r\n\r\nexport const moviesCategory = () => {\r\n  const location = useLocation()\r\n  const pathname = location.pathname as fetchMovieType\r\n  const [page, setPage] = useState(1)\r\n\r\n  const onPageChange: OnPageChangeCallback = (selectedItem) => {\r\n    const newPage = selectedItem.selected + 1\r\n    setPage(newPage)\r\n  }\r\n\r\n  const { status, data } = useFetch({ pathname, page })\r\n\r\n  return (\r\n    <MoviesListPage\r\n      status={status}\r\n      moviesData={data}\r\n      onPageChange={onPageChange}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFavorite.tsx",["203","204","205"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../app/store'\r\nimport { MoviesList } from './MoviesList'\r\nimport { useAuth } from './../../context/authContext'\r\nimport { getFavorite, MovieType } from './../../api/movieApi'\r\n\r\nexport const moviesFavorite = () => {\r\n  const [movies, setMovies] = useState<MovieType[]>([])\r\n  // const movies = useSelector((state: RootState) => state.movies.favorite)\r\n  const { favoriteList } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const favorite = await getFavorite(favoriteList)\r\n      setMovies(favorite)\r\n    }\r\n    fetchApi()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Test</h1>\r\n      <MoviesList movies={movies} />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadSearch.tsx",["206"],"import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { MoviesListPage } from './moviesListPage'\r\nimport { OnPageChangeCallback } from './moviesPagination'\r\n\r\nexport const moviesSearch = () => {\r\n  const { search } = useLocation()\r\n  const [page, setPage] = useState(1)\r\n\r\n  const onPageChange: OnPageChangeCallback = (selectedItem) => {\r\n    const newPage = selectedItem.selected + 1\r\n    setPage(newPage)\r\n  }\r\n\r\n  const { status, data } = useFetch({ pathname: '/search', page, search })\r\n\r\n  return (\r\n    <MoviesListPage\r\n      status={status}\r\n      moviesData={data}\r\n      onPageChange={onPageChange}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesSlice.tsx",["207"],"C:\\Front\\Movie-Search\\src\\features\\filter\\filterSlice.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\filter\\filerPage.tsx",["208","209"],"import React from 'react'\r\nimport { FilterGenres } from './filterGenres'\r\nimport { FilterSorting } from './filterSorting'\r\nimport { LoadFilterMovies } from '../movies/moviesLoadFilter'\r\nimport style from './filerPage.module.css'\r\nimport styled from 'styled-components'\r\nimport { device } from '../../app/lib'\r\n\r\nconst Filter = styled.div`\r\n  position: relative;\r\n  width: 75%;\r\n  min-height: 70vh;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  background-color: rgb(241, 241, 241);\r\n  grid-template-columns: 6fr 1fr;\r\n  grid-template-areas:\r\n    'sr gl'\r\n    'ml gl';\r\n  grid-template-rows: 80px;\r\n  min-height: 87vh;\r\n  @media ${device.laptopS} {\r\n    grid-template-areas:\r\n      ' gl'\r\n      'sr'\r\n      'ml';\r\n    grid-template-columns: 1fr;\r\n  }\r\n`\r\n\r\nconst Sort = styled.div`\r\n  grid-area: sr;\r\n  max-height: 45px;\r\n  border-bottom: 1px solid #ddd;\r\n`\r\n\r\nconst Genres = styled.div`\r\n  grid-area: gl;\r\n  border-left: 1px solid #ddd;\r\n`\r\n\r\nconst Movies = styled.div`\r\n  grid-area: ml;\r\n`\r\n\r\nexport const FilterPage = () => {\r\n  return (\r\n    <Filter>\r\n      <Sort>\r\n        <FilterSorting />\r\n      </Sort>\r\n      <Genres>\r\n        <FilterGenres />\r\n      </Genres>\r\n      <Movies>\r\n        <LoadFilterMovies />\r\n      </Movies>\r\n    </Filter>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Navbar.tsx",["210"],"import React, { useEffect, useRef } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport github from './../style/github.svg'\r\nimport styled from 'styled-components'\r\nimport { device } from './lib'\r\n// import style from './navbar.module.css'\r\nimport Toggle from './Toggle'\r\nimport { useClickOutSide } from './../hooks/useClickOutSide'\r\n\r\nconst Nav = styled.nav`\r\n  grid-area: nv;\r\n  font-size: 20px;\r\n  transition: ease 0.3s;\r\n  media ${device.laptopM} {\r\n    justify-self: center;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media ${device.laptopM} {\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    z-index: 100;\r\n    left: 0;\r\n    bottom: -361px;\r\n    width: 250px;\r\n    background-color: #212121;\r\n    -webkit-font-smoothing: antialiased;\r\n    transform-origin: 0% 0%;\r\n    transform: translate(-100%, 0);\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);\r\n  }\r\n`\r\n\r\nconst ListHidden = styled(List)`\r\n  transform: none;\r\n`\r\n\r\nconst Item = styled.li`\r\n  cursor: pointer;\r\n  @media ${device.laptopM} {\r\n    width: 100%;\r\n    margin-left: 40px;\r\n    display: block;\r\n  }\r\n  @media ${device.mobileM} {\r\n    margin-left: 0;\r\n  }\r\n`\r\nconst activeClassName = 'nav-item-active'\r\n\r\nconst Link = styled(NavLink).attrs({ activeClassName })`\r\n  &.${activeClassName} {\r\n    &::after {\r\n      transform: scaleY(1);\r\n    }\r\n    @media ${device.laptopM} {\r\n      background-color: #252525;\r\n    }\r\n  }\r\n  display: inline-block;\r\n  color: #fff;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  position: relative;\r\n  transition: color 0.3s ease;\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 4px;\r\n    bottom: 0px;\r\n    left: 0;\r\n    transform: scaleY(0);\r\n    transform-origin: bottom;\r\n    transition: transform 235ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding-left: 25px;\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst Icon = styled.img`\r\n  transition: opacity 0.3s ease;\r\n  width: 25px;\r\n  &:hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport const Navbar = () => {\r\n  const wrapperRef = useRef<HTMLElement | null>(null)\r\n  const location = useLocation()\r\n  const [isHidden, setHidden] = React.useState<boolean>(true)\r\n\r\n  useClickOutSide(wrapperRef, () => {\r\n    document.body.classList.remove('overlay')\r\n    setHidden(true)\r\n  })\r\n\r\n  useEffect(() => {\r\n    setHidden(true)\r\n    document.body.classList.remove('overlay')\r\n  }, [location.key])\r\n\r\n  const handleClickBtn = () => {\r\n    if (isHidden) {\r\n      setHidden(false)\r\n      document.body.classList.toggle('overlay')\r\n    } else {\r\n      setHidden(true)\r\n      document.body.classList.toggle('overlay')\r\n    }\r\n  }\r\n\r\n  const Items = isHidden ? List : ListHidden\r\n  return (\r\n    <Nav ref={wrapperRef}>\r\n      <Toggle isHidden={isHidden} onClick={() => handleClickBtn()} />\r\n      <Items>\r\n        <Item>\r\n          <Link exact to='/'>\r\n            Popular\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/upcoming'>Up comning</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/top_rated'>Top rated</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/favorite'>Favorite</Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to='/filter'>Filter</Link>\r\n        </Item>\r\n        <Item>\r\n          <a\r\n            href='https://github.com/ethnicolr/Movie-Search'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n          >\r\n            <Icon src={github} alt='github' width='40' />\r\n          </a>\r\n        </Item>\r\n      </Items>\r\n    </Nav>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchPage.tsx",["211"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { debounce } from 'lodash'\r\nimport { getMovies, MovieType } from '../../api/movieApi'\r\nimport { MoviesSearchInput } from './moviesSearchInput'\r\nimport { MoviesSearchList } from './moviesSearchList'\r\nimport styled from 'styled-components'\r\n\r\ntype searchStatus = 'indle' | 'pendiing' | 'succeeded' | 'failed'\r\n\r\nconst Search = styled.div`\r\n  grid-area: in;\r\n  position: relative;\r\n  z-index: 20;\r\n  grid-area: in;\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  background: #212121;\r\n  z-index: 10;\r\n`\r\n\r\nconst HiddenContainer = styled(Container)`\r\n  display: none;\r\n`\r\n\r\nexport const MoviesSearchPage = () => {\r\n  const [isHidden, setHidden] = useState(false)\r\n  const [list, setList] = useState<MovieType[]>([])\r\n  const [searchStatus, setStatus] = useState<searchStatus>('indle')\r\n  const [error, setError] = useState(null)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const wrapperRef = React.useRef<HTMLDivElement | null>(null)\r\n\r\n  const delay = useCallback(\r\n    debounce((value: string) => {\r\n      setStatus('pendiing')\r\n      const fetchS = async () => {\r\n        try {\r\n          const data = await getMovies({ pathname: '/search', search: value })\r\n          const list = data.moviesList.slice(0, 5)\r\n          setList(list)\r\n          setStatus('succeeded')\r\n        } catch (err) {\r\n          setStatus('failed')\r\n          console.log('fail')\r\n          setError(err)\r\n        }\r\n      }\r\n      if (value.length) {\r\n        fetchS()\r\n      } else {\r\n        setList([])\r\n      }\r\n    }, 500),\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    setHidden(true)\r\n  }, [location.key])\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent): void => {\r\n      if (\r\n        wrapperRef.current &&\r\n        !wrapperRef.current.contains(e.target as Node)\r\n      ) {\r\n        setHidden(true)\r\n      } else {\r\n        setHidden(false)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  const onSearchSubmit = (value: string): void => {\r\n    history.push({\r\n      pathname: '/search',\r\n      search: value,\r\n    })\r\n  }\r\n\r\n  let previewList\r\n\r\n  if (list.length === 0 && searchStatus === 'succeeded') {\r\n    previewList = <h2>Not found</h2>\r\n  } else if (error) {\r\n    previewList = <h2>{error}</h2>\r\n  } else {\r\n    previewList = <MoviesSearchList movies={list} />\r\n  }\r\n\r\n  const Wrapper = isHidden ? HiddenContainer : Container\r\n\r\n  return (\r\n    <>\r\n      <Search ref={wrapperRef}>\r\n        <MoviesSearchInput\r\n          onSearchChange={delay}\r\n          onSearchSubmit={onSearchSubmit}\r\n        />\r\n        <Wrapper>{previewList}</Wrapper>\r\n      </Search>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListPage.tsx",["212"],"import React from 'react'\r\nimport { Status, MoviesResult } from '../../api/movieApi'\r\nimport { Pagination, OnPageChangeCallback } from './moviesPagination'\r\nimport { MoviesList } from './MoviesList'\r\nimport { Spinner } from './../../app/Spinner'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  margin: 55px auto;\r\n`\r\ninterface Props {\r\n  status: Status\r\n  moviesData: MoviesResult | null\r\n  onPageChange: OnPageChangeCallback\r\n}\r\n\r\nexport const MoviesListPage = ({ status, moviesData, onPageChange }: Props) => {\r\n  if (moviesData == null || status == 'fetching') {\r\n    return (\r\n      <Container>\r\n        <Spinner />\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  if (status == 'fetched' && moviesData.moviesList.length == 0) {\r\n    return (\r\n      <Container>\r\n        <h2>Not fount</h2>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  const { moviesList, totalPages, page } = moviesData\r\n  return (\r\n    <Container>\r\n      <MoviesList movies={moviesList} />\r\n      <Pagination\r\n        pageCount={totalPages}\r\n        currentPage={page}\r\n        onPageChange={onPageChange}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\filter\\filterGenres.tsx",["213"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeGenres } from './filterSlice'\r\nimport { RootState } from '../../app/store'\r\nimport { fetchGenres } from './filterSlice'\r\n// import style from './filterGenres.module.css'\r\nimport styled from 'styled-components'\r\nimport { device, Title } from '../../app/lib'\r\n\r\nconst Container = styled.div`\r\n  padding-left: 15px;\r\n  position: sticky;\r\n  top: 145px;\r\n  @media ${device.laptopS} {\r\n    text-align: center;\r\n    position: sticky;\r\n    top: 150px;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  @media ${device.laptopS} {\r\n    padding: 1px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst Item = styled.li`\r\n  @media ${device.laptopS} {\r\n    min-width: 150px;\r\n    margin-right: 15px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 15px;\r\n  padding: 8px 8px 8px 40px;\r\n\r\n  &:hover {\r\n    background-color: #e1e1e1;\r\n  }\r\n\r\n  input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    height: 0;\r\n    width: 0;\r\n  }\r\n\r\n  input:checked + label {\r\n    background-color: #0f9fbf;\r\n  }\r\n  input:checked ~ span::after {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Checkmark = styled.span`\r\n  position: absolute;\r\n  top: 7px;\r\n  left: 10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  background-color: #cfcfcf;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  &::after {\r\n    left: 6px;\r\n    top: 2px;\r\n    width: 5px;\r\n    height: 10px;\r\n    border: solid #0f9fbf;\r\n    border-width: 0 3px 3px 0;\r\n    -webkit-transform: rotate(45deg);\r\n    -ms-transform: rotate(45deg);\r\n    transform: rotate(45deg);\r\n  }\r\n`\r\n\r\nexport const FilterGenres = () => {\r\n  const dispatch = useDispatch()\r\n  const genres = useSelector((state: RootState) => state.filter.genres)\r\n\r\n  useEffect(() => {\r\n    if (genres.length === 0) {\r\n      dispatch(fetchGenres())\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    dispatch(changeGenres(e.currentTarget.name))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title size={'20px'}>Genres</Title>\r\n      <List>\r\n        {genres.length\r\n          ? genres.map((genre) => {\r\n              return (\r\n                <Item key={genre.id}>\r\n                  <Label>\r\n                    {genre.name}\r\n                    <input\r\n                      type='checkbox'\r\n                      onChange={handleChange}\r\n                      checked={genre.selected}\r\n                      name={genre.id}\r\n                    />\r\n                    <Checkmark />\r\n                  </Label>\r\n                </Item>\r\n              )\r\n            })\r\n          : null}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\filter\\filterSorting.tsx",["214"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sortBy } from './filterSlice'\r\nimport { RootState } from './../../app/store'\r\nimport style from './filterSorting.module.css'\r\nimport styled from 'styled-components'\r\nimport { Title } from '../../app/lib'\r\n\r\nconst Container = styled.div`\r\n  text-align: right;\r\n  padding: 20px 25px 10px 0;\r\n`\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nexport const FilterSorting = () => {\r\n  const dispatch = useDispatch()\r\n  const active = useSelector((state: RootState) => state.filter.sortBy)\r\n\r\n  const handleSort = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    dispatch(sortBy(e.currentTarget.name))\r\n  }\r\n\r\n  const sortActivity = (field: string) => {\r\n    return active === `${field}.desc`\r\n      ? `${style.sortBtn} ${style.desc}`\r\n      : `${style.sortBtn} ${style.asc}`\r\n  }\r\n\r\n  return (\r\n    <Container className={style.sort}>\r\n      <Title size={'20px'}>Sort by</Title>\r\n      <Items>\r\n        <li>\r\n          <button\r\n            className={sortActivity('popularity')}\r\n            name='popularity'\r\n            onClick={handleSort}\r\n          >\r\n            popularity\r\n          </button>\r\n        </li>\r\n        <li className={style.item}>\r\n          <button\r\n            className={sortActivity('release_date')}\r\n            name='release_date'\r\n            onClick={handleSort}\r\n          >\r\n            date\r\n          </button>\r\n        </li>\r\n        <li className={style.item}>\r\n          <button\r\n            className={sortActivity('vote_average')}\r\n            name='vote_average'\r\n            onClick={handleSort}\r\n          >\r\n            rating\r\n          </button>\r\n        </li>\r\n      </Items>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesLoadFilter.tsx",["215"],"import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../app/store'\r\nimport { useFetch } from '../../hooks/useFetch'\r\nimport { MoviesListPage } from './moviesListPage'\r\nimport { OnPageChangeCallback } from './moviesPagination'\r\n\r\nexport const LoadFilterMovies = () => {\r\n  const [page, setPage] = useState(1)\r\n  const { genres, sortBy } = useSelector((state: RootState) => state.filter)\r\n\r\n  const selectedGenres = genres\r\n    .filter((genre) => genre.selected)\r\n    .map((genre) => genre.id)\r\n\r\n  const onPageChange: OnPageChangeCallback = (selectedItem) => {\r\n    const newPage = selectedItem.selected + 1\r\n    setPage(newPage)\r\n  }\r\n\r\n  const { status, data } = useFetch({\r\n    pathname: '/filter',\r\n    sortBy,\r\n    genres: selectedGenres,\r\n    page,\r\n  })\r\n\r\n  return (\r\n    <MoviesListPage\r\n      status={status}\r\n      moviesData={data}\r\n      onPageChange={onPageChange}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\useFetch.tsx",[],"C:\\Front\\Movie-Search\\src\\api\\movieApi.tsx",["216"],"C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchInput.tsx",["217","218"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport seach from './../../style/search.svg'\r\n\r\ninterface InputProps {\r\n  onSearchChange(value: string): void\r\n  onSearchSubmit(value: string): void\r\n}\r\n\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px;\r\n  padding-left: 40px;\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  background: transparent;\r\n  border-bottom: 1px solid #0f9fbf;\r\n`\r\n\r\nconst Button = styled.button`\r\n  width: 30px;\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 13px;\r\n  outline: none;\r\n`\r\n\r\nexport const MoviesSearchInput = ({\r\n  onSearchChange,\r\n  onSearchSubmit,\r\n}: InputProps) => {\r\n  const [value, setValue] = useState('')\r\n  const inputEl = React.useRef<HTMLInputElement>(null!)\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    const value = e.currentTarget.value\r\n    setValue(value)\r\n    onSearchChange(value)\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault()\r\n    if (value.length) {\r\n      onSearchSubmit(value)\r\n      inputEl.current.blur()\r\n      document.body.style.overflow = 'auto'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          ref={inputEl}\r\n          type='text'\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder='Seacrh movie...'\r\n        />\r\n        <Button>\r\n          <img src={seach} alt='seach' />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchList.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\movies\\moviesPagination.tsx",["219"],"import React from 'react'\r\nimport Paginate, { ReactPaginateProps } from 'react-paginate'\r\nimport style from './moviesPagination.module.css'\r\n\r\nexport type OnPageChangeCallback = ReactPaginateProps['onPageChange']\r\n\r\ninterface Props {\r\n  currentPage: number\r\n  pageCount: number\r\n  onPageChange?: OnPageChangeCallback\r\n}\r\n\r\nexport const Pagination = ({ currentPage, onPageChange, pageCount }: Props) => {\r\n  return (\r\n    <Paginate\r\n      forcePage={currentPage}\r\n      pageCount={pageCount}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={5}\r\n      onPageChange={onPageChange}\r\n      nextLabel='&rarr;'\r\n      previousLabel='&larr;'\r\n      containerClassName={style.pagination}\r\n      activeClassName={style.active}\r\n    />\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Spinner.tsx",["220"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`\r\nconst Dots = styled.div`\r\n  padding: 5px;\r\n`\r\n\r\ntype DotProps = {\r\n  bgColor?: string\r\n}\r\nconst Dot = styled.div<DotProps>`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: transparent;\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  &::after {\r\n    transform: scale(0.2);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    content: '';\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background-color: ${(props) => props.bgColor || '#000000'};\r\n    display: inline-block;\r\n    animation-name: scale;\r\n    animation-duration: 900ms;\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  &:nth-child(2)::after {\r\n    animation-delay: 150ms;\r\n  }\r\n\r\n  &:nth-child(3)::after {\r\n    animation-delay: 300ms;\r\n  }\r\n\r\n  @keyframes scale {\r\n    0% {\r\n      transform: scale(0.2);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0.2);\r\n    }\r\n  }\r\n`\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Container>\r\n      <Dots>\r\n        <Dot />\r\n        <Dot />\r\n        <Dot />\r\n      </Dots>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","C:\\Front\\Movie-Search\\src\\hooks\\usePrevious.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\search\\moviesSearchItem.tsx",["221"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { MovieType } from '../../api/movieApi'\r\nimport { Image } from './../../app/Image'\r\n\r\nimport star from './../../style/star.svg'\r\n\r\ntype Props = { movie: MovieType }\r\n\r\nconst Item = styled(Link)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-right: 20px;\r\n  color: #fff;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 19px;\r\n  font-weight: 400;\r\n`\r\n\r\nconst Vote = styled.span`\r\n  font-size: 19px;\r\n`\r\n\r\nconst Thumb = styled.img`\r\n  width: 12px;\r\n  margin-left: 5px;\r\n`\r\n\r\nexport const MoviesSearchItem = ({ movie }: Props) => {\r\n  const {\r\n    title,\r\n    name,\r\n    release_date,\r\n    first_air_date,\r\n    poster_path,\r\n    id,\r\n    vote_average,\r\n    media_type,\r\n  } = movie\r\n\r\n  const titleValue = title || name\r\n  const dateValue =\r\n    release_date || first_air_date\r\n      ? `(${(release_date || first_air_date).split(/-/)[0]})`\r\n      : null\r\n\r\n  const vote = vote_average ? vote_average.toFixed(1) : 0\r\n  const heading = `${titleValue} ${dateValue}`\r\n  const link = `/${media_type ? media_type : 'movie'}/${id}`\r\n\r\n  const poster = `https://image.tmdb.org/t/p/w300/${poster_path}`\r\n  return (\r\n    <Item to={link}>\r\n      {/* <Image src={poster} size={'50px'} /> */}\r\n      <Image src={poster} size={'50px'} />\r\n      <Title>{heading}</Title>\r\n      <Vote>\r\n        {vote}\r\n        <Thumb src={star} alt='vote' />\r\n      </Vote>\r\n    </Item>\r\n  )\r\n}\r\n",[],"C:\\Front\\Movie-Search\\src\\app\\image.tsx",["222"],"C:\\Front\\Movie-Search\\src\\features\\movies\\MovieDetails.tsx",["223","224","225"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { DetailsResult, gethDetails } from '../../api/movieApi'\r\nimport { useFetch } from './../../hooks/useFetch'\r\nimport { useAuth } from './../../context/authContext'\r\nimport { MoviesList } from './MoviesList'\r\nimport { Image } from './../../app/Image'\r\nimport { Title, Text, device } from '../../app/lib'\r\n\r\nimport remove from './../../style/minus.svg'\r\nimport vote from './../../style/star.svg'\r\nimport add from './../../style/correct.svg'\r\nimport styled from 'styled-components'\r\n\r\ninterface PropsParams {\r\n  movieId: string\r\n  media_type: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  z-index: 5;\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 100px auto;\r\n  box-sizing: border-box;\r\n  padding: 50px;\r\n  color: #fff;\r\n  background: #0b0b0b;\r\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n  @media ${device.laptopL} {\r\n    width: 80%;\r\n  }\r\n  @media ${device.laptopS} {\r\n    justify-content: center;\r\n  }\r\n  @media ${device.mobileL} {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n  }\r\n`\r\n\r\nconst ContainerImage = styled.div`\r\n  margin-right: 75px;\r\n  width: 30%;\r\n  @media ${device.laptopM} {\r\n    margin-right: 45px;\r\n    width: 250px;\r\n    img {\r\n      width: 250px;\r\n    }\r\n  }\r\n  @media ${device.laptopS} {\r\n    width: 350px;\r\n    margin: 0 auto;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media ${device.mobileL} {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    margin-bottom: 25px;\r\n  }\r\n`\r\nconst ContainerDesc = styled.div`\r\n  width: 55%;\r\n`\r\nconst ContainerInfo = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst Heading = styled(ContainerInfo)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Desc = styled(ContainerInfo)`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n`\r\n\r\nconst Vote = styled.span`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n  img {\r\n    width: 15px;\r\n    height: 15px;\r\n    margin-left: 5px;\r\n\r\n`\r\n\r\nconst Tagline = styled.h2`\r\n  font-size: 16px;\r\n  color: rgb(146, 146, 146);\r\n  font-weight: 600;\r\n  flex-basis: 20%;\r\n`\r\n\r\nconst TextDesc = styled(Text)`\r\n  flex-basis: 80%;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  color: #fff;\r\n  font-size: 17px;\r\n  background: #202020;\r\n  padding: 10px 30px;\r\n  margin-top: 20px;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  img {\r\n    width: 16px;\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nexport const MovieDetails = () => {\r\n  const [data, setData] = React.useState<DetailsResult | null>(null)\r\n  const [error, setError] = React.useState(null)\r\n  const { movieId, media_type } = useParams<PropsParams>()\r\n\r\n  const { data: similarMovie } = useFetch({ pathname: '/similar', movieId })\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await gethDetails(movieId)\r\n        setData(data)\r\n        setError(null)\r\n      } catch (err) {\r\n        setError(err)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [media_type, movieId])\r\n  const {\r\n    currentUser,\r\n    logout,\r\n    handleLoginModal,\r\n    isOpenLogin,\r\n    addToStorage,\r\n    deleteFromStorage,\r\n    favoriteList,\r\n  } = useAuth()\r\n\r\n  // const favorite = useSelector((state: RootState) => state.movies.favorite)\r\n  const isFav = favoriteList.some((id) => id == movieId)\r\n\r\n  if (error) {\r\n    return <h2 className='movie-details__title'>{error}</h2>\r\n  }\r\n\r\n  if (!data) {\r\n    return null\r\n  }\r\n\r\n  const {\r\n    title,\r\n    vote_average,\r\n    poster_path,\r\n    overview,\r\n    tagline,\r\n    release_date,\r\n    first_air_date,\r\n    genres = [],\r\n    runtime,\r\n    episode_run_time,\r\n    name,\r\n    id,\r\n    production_countries = [],\r\n    budget = 0,\r\n  } = data.movieDetails\r\n\r\n  const handleFavorite = () => {\r\n    if (!currentUser) {\r\n      handleLoginModal(true)\r\n      return\r\n    }\r\n    isFav ? deleteFromStorage(id) : addToStorage(id)\r\n  }\r\n\r\n  const genresList = genres.length\r\n    ? genres.map((movie) => ` ${movie.name.toLowerCase()}`).join()\r\n    : null\r\n  const countries = production_countries.length\r\n    ? production_countries.map((e) => ` ${e.name}`).join()\r\n    : null\r\n  const castList = data.cast\r\n    ? data.cast\r\n        .slice(0, 10)\r\n        .map((item) => ` ${item.name}`)\r\n        .join()\r\n    : null\r\n  const formatBudget = `$ ${budget\r\n    .toString()\r\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}`\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerImage>\r\n        <Image src={`https://image.tmdb.org/t/p/w500/${poster_path}`} />\r\n      </ContainerImage>\r\n      <ContainerDesc>\r\n        <Heading>\r\n          <h2> {title || name} </h2>\r\n          <Vote>\r\n            {`${vote_average} `}\r\n            <img src={vote} alt='vote' />\r\n          </Vote>\r\n        </Heading>\r\n\r\n        {release_date || first_air_date ? (\r\n          <Desc>\r\n            <Tagline>Year</Tagline>\r\n            <TextDesc>\r\n              {(release_date || first_air_date).split('-')[0]}\r\n            </TextDesc>\r\n          </Desc>\r\n        ) : null}\r\n\r\n        {countries ? (\r\n          <Desc>\r\n            <Tagline>Country</Tagline>\r\n            <TextDesc>{countries}</TextDesc>\r\n          </Desc>\r\n        ) : null}\r\n\r\n        <Desc>\r\n          <Tagline>Genres</Tagline>\r\n          <TextDesc>{genresList}</TextDesc>\r\n        </Desc>\r\n\r\n        {tagline ? (\r\n          <Desc>\r\n            <Tagline>Tag</Tagline>\r\n            <TextDesc>{tagline}</TextDesc>\r\n          </Desc>\r\n        ) : null}\r\n\r\n        <Desc>\r\n          <Tagline>Cast</Tagline>\r\n          <TextDesc>{castList}</TextDesc>\r\n        </Desc>\r\n\r\n        <Desc>\r\n          <Tagline>Runtime</Tagline>\r\n          <TextDesc>\r\n            {episode_run_time || runtime} {' min'}\r\n          </TextDesc>\r\n        </Desc>\r\n\r\n        <Desc>\r\n          <Tagline>Budget</Tagline>\r\n          <TextDesc>{formatBudget}</TextDesc>\r\n        </Desc>\r\n\r\n        <Title size={'30px'}>Overview</Title>\r\n        <Text size={'18px'}> {overview} </Text>\r\n\r\n        <Button onClick={handleFavorite}>\r\n          <img src={isFav ? add : remove} alt='favorite' />\r\n          {isFav ? 'Delete from Favorite' : 'Add to Favorite'}\r\n        </Button>\r\n      </ContainerDesc>\r\n      <div>\r\n        <Title>Recommendations</Title>\r\n        {similarMovie ? <MoviesList movies={similarMovie.moviesList} /> : null}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\MoviesList.tsx",["226"],"import React from 'react'\r\nimport { MovieType } from '../../api/movieApi'\r\nimport { Movie } from './moviesListItem'\r\nimport { useAuth } from './../../context/authContext'\r\nimport { device } from './../../app/lib'\r\nimport styled from 'styled-components'\r\n\r\ninterface MoviesProp {\r\n  movies: MovieType[]\r\n}\r\n\r\nconst ListItems = styled.ul`\r\n  position: relative;\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Item = styled.li`\r\n  width: 210px;\r\n  max-height: 480px;\r\n  margin-right: 35px;\r\n  margin-bottom: 45px;\r\n  @media ${device.mobileM} {\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nexport const MoviesList = ({ movies }: MoviesProp) => {\r\n  const { favoriteList } = useAuth()\r\n  return (\r\n    <ListItems>\r\n      {movies.map((movie) => {\r\n        const isFav = favoriteList.some((id) => id === movie.id)\r\n        return (\r\n          <Item key={movie.id}>\r\n            <Movie movieData={movie} isFav={isFav} />\r\n          </Item>\r\n        )\r\n      })}\r\n    </ListItems>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\movies\\moviesListItem.tsx",[],"C:\\Front\\Movie-Search\\src\\context\\authContext.tsx",["227"],"import React, { useContext, useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\nimport { auth, db } from './../index'\r\n\r\nexport type singupType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type loginType = (\r\n  email: string,\r\n  password: string\r\n) => Promise<firebase.auth.UserCredential>\r\n\r\nexport type logoutType = () => Promise<void>\r\n\r\ninterface ValueProps {\r\n  currentUser: firebase.User | null\r\n  singup: singupType\r\n  login: loginType\r\n  logout: logoutType\r\n  handleLoginModal: (value: boolean) => void\r\n  handleSingUpModal: (value: boolean) => void\r\n  addToStorage: (id: string) => Promise<void>\r\n  deleteFromStorage: (id: string) => Promise<void>\r\n  favoriteList: string[]\r\n  isOpenLogin: boolean\r\n  isOpenSingUp: boolean\r\n}\r\n\r\nconst AuthContext = React.createContext({} as ValueProps)\r\n\r\nexport function useAuth(): ValueProps {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null)\r\n  const [favoriteList, setFavoriteList] = useState<string[]>([])\r\n  const [isOpenLogin, setModalLogin] = useState(false)\r\n  const [isOpenSingUp, setModalSingUp] = useState(false)\r\n\r\n  const singup: singupType = (email, password) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const login: loginType = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const logout: logoutType = () => {\r\n    console.log('test')\r\n    return auth.signOut()\r\n  }\r\n  const handleLoginModal = (value: boolean) => {\r\n    setModalLogin(value)\r\n  }\r\n\r\n  const handleSingUpModal = (value: boolean) => {\r\n    setModalSingUp(value)\r\n  }\r\n\r\n  const getFaviriteList = async (\r\n    docRef: firebase.firestore.DocumentReference\r\n  ) => {\r\n    const userData = await docRef.get()\r\n    const favorite = userData.data()?.favorite as string[]\r\n    return favorite\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const docRef = db.collection('users').doc(user.uid)\r\n        docRef.get().then(async (doc) => {\r\n          if (!doc.exists) {\r\n            db.collection('users')\r\n              .doc(user.uid)\r\n              .set({ email: user.email, favorite: [] })\r\n          } else {\r\n            const favorite = await getFaviriteList(docRef)\r\n            setFavoriteList(favorite)\r\n          }\r\n        })\r\n      } else {\r\n        setFavoriteList([])\r\n      }\r\n\r\n      setCurrentUser(user)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const addToStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = [...favoriteList, id]\r\n      docRef.update('favorite', newList)\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const deleteFromStorage = async (id: string) => {\r\n    if (currentUser) {\r\n      const docRef = db.collection('users').doc(currentUser.uid)\r\n      const newList = favoriteList.filter((movie) => movie !== id)\r\n      docRef.update('favorite', [...newList])\r\n      setFavoriteList(newList)\r\n    }\r\n  }\r\n\r\n  const value: ValueProps = {\r\n    currentUser,\r\n    favoriteList,\r\n    isOpenLogin,\r\n    isOpenSingUp,\r\n    addToStorage,\r\n    deleteFromStorage,\r\n    singup,\r\n    login,\r\n    logout,\r\n    handleLoginModal,\r\n    handleSingUpModal,\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\auth.tsx",["228","229","230","231","232"],"C:\\Front\\Movie-Search\\src\\features\\auth\\Auth.tsx",["233"],"import React, { Fragment } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useAuth } from '../../context/authContext'\r\nimport { AuthModal } from './AuthModal'\r\nimport { AuthLogin } from './AuthLogin'\r\nimport { AuthSingup } from './AuthSingup'\r\nimport { useClickOutSide } from './../../hooks/useClickOutSide'\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  transition: color 0.3s ease;\r\n  outline: none;\r\n  &:hover {\r\n    color: #999;\r\n  }\r\n`\r\n\r\nconst Container = styled.div({\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n})\r\n\r\nexport function Auth() {\r\n  const loginRef = React.createRef<HTMLDivElement>()\r\n  const singUpRef = React.createRef<HTMLDivElement>()\r\n\r\n  const {\r\n    currentUser,\r\n    logout,\r\n    isOpenLogin,\r\n    isOpenSingUp,\r\n    handleLoginModal,\r\n    handleSingUpModal,\r\n  } = useAuth()\r\n\r\n  useClickOutSide(loginRef, () => handleLoginModal(false))\r\n  useClickOutSide(singUpRef, () => handleSingUpModal(false))\r\n\r\n  return (\r\n    <Container>\r\n      {currentUser ? (\r\n        <Button onClick={() => logout()}>logout</Button>\r\n      ) : (\r\n        <Fragment>\r\n          <Button onClick={() => handleLoginModal(true)}>Login</Button>\r\n          <Button onClick={() => handleSingUpModal(true)}>Registr</Button>\r\n\r\n          <AuthModal title={'Login'} isOpen={isOpenLogin} ref={loginRef}>\r\n            <Button onClick={() => handleLoginModal(false)}>Close</Button>\r\n            <AuthLogin\r\n              showRegister={() => {\r\n                handleSingUpModal(true)\r\n                handleLoginModal(false)\r\n              }}\r\n            />\r\n          </AuthModal>\r\n\r\n          <AuthModal title={'Register'} isOpen={isOpenSingUp} ref={singUpRef}>\r\n            <Button onClick={() => handleSingUpModal(false)}>Close</Button>\r\n            <AuthSingup />\r\n          </AuthModal>\r\n        </Fragment>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthModal.tsx",[],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthForm.tsx",["234"],"C:\\Front\\Movie-Search\\src\\features\\auth\\AuthLogin.tsx",["235","236","237"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useAuth, singupType, loginType } from '../../context/authContext'\r\nimport {\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Dots,\r\n  Dot,\r\n} from './../../app/lib'\r\nimport { useAsync } from './../../hooks/useAsync'\r\n\r\nconst LoginButton = styled(Button)`\r\n  background-color: #0b0b0b;\r\n  color: #fff;\r\n  width: 100%;\r\n`\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  color: #0366d6;\r\n`\r\nconst LinkContainer = styled.p`\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  border: 1px solid var(--color-border-tertiary);\r\n  border-radius: 6px;\r\n  font-weight: 400;\r\n`\r\n\r\ntype FormProps = {\r\n  showRegister: () => void\r\n}\r\n\r\nexport function AuthLogin({ showRegister }: FormProps): JSX.Element {\r\n  const { login } = useAuth()\r\n\r\n  const { error, run, isLoading, isError } = useAsync()\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n\r\n    const target = e.target as typeof e.target & {\r\n      email: { value: string }\r\n      password: { value: string }\r\n    }\r\n    const email = target.email.value\r\n    const password = target.password.value\r\n\r\n    run(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <label htmlFor='email'>Email</label>\r\n        <Input id='email' type='text' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='password'>Password</label>\r\n        <Input id='password' type='password' />\r\n      </FormGroup>\r\n      <div>\r\n        <LoginButton type='submit'>\r\n          {isLoading ? (\r\n            <Spinner>\r\n              <Dots>\r\n                <Dot bgColor={'#fff'} />\r\n                <Dot bgColor={'#fff'} />\r\n                <Dot bgColor={'#fff'} />\r\n              </Dots>\r\n            </Spinner>\r\n          ) : (\r\n            'Login'\r\n          )}\r\n        </LoginButton>\r\n      </div>\r\n      <FormGroup>{isError && <p>{error}</p>}</FormGroup>\r\n\r\n      <LinkContainer>\r\n        Need account?\r\n        <Link onClick={showRegister}> Create an account.</Link>\r\n      </LinkContainer>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\features\\auth\\AuthSingup.tsx",["238","239","240","241"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, FormGroup, Form, Button } from './../../app/lib'\r\n\r\nimport { useAuth, singupType, loginType } from '../../context/authContext'\r\n\r\nexport function AuthSingup(): JSX.Element {\r\n  const { login, singup } = useAuth()\r\n  const [error, setError] = useState('')\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n\r\n    const target = e.target as typeof e.target & {\r\n      email: { value: string }\r\n      password: { value: string }\r\n      passwordConfirm: { value: string }\r\n    }\r\n    const email = target.email.value\r\n    const password = target.password.value\r\n    const passwordConfirm = target.passwordConfirm.value\r\n\r\n    if (password !== passwordConfirm) {\r\n      setError('Passwords do not match')\r\n      return\r\n    }\r\n\r\n    try {\r\n      await singup(email, password)\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <label htmlFor='email'>Email</label>\r\n        <Input id='email' type='text' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='password'>Password</label>\r\n        <Input id='password' type='password' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <label htmlFor='passwordConfirm'>Confirm password</label>\r\n        <Input id='passwordConfirm' type='password' />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Button type='submit'>Register</Button>\r\n      </FormGroup>\r\n      {error && <h1>{error}</h1>}\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\hooks\\useClickOutSide.tsx",[],"C:\\Front\\Movie-Search\\src\\app\\lib.tsx",[],"C:\\Front\\Movie-Search\\src\\hooks\\useAsync.tsx",["242","243"],"import React, { Reducer, useReducer, useCallback } from 'react'\r\n\r\ntype State<T> = {\r\n  data: null | T\r\n  status: string\r\n  error: null | string\r\n}\r\n\r\ntype Action<T> =\r\n  | { type: 'pending' }\r\n  | { type: 'resolved'; data: T }\r\n  | { type: 'rejected'; error: string }\r\n\r\nfunction asyncReducer<T>(state: State<T>, action: Action<T>): State<T> {\r\n  switch (action.type) {\r\n    case 'pending': {\r\n      return { status: 'pending', data: null, error: null }\r\n    }\r\n    case 'resolved': {\r\n      return { status: 'resolved', data: action.data, error: null }\r\n    }\r\n    case 'rejected': {\r\n      return { status: 'rejected', data: null, error: action.error }\r\n    }\r\n  }\r\n}\r\n\r\nfunction useAsync<T>() {\r\n  const [state, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(\r\n    asyncReducer,\r\n    {\r\n      status: 'idle',\r\n      data: null,\r\n      error: null,\r\n    }\r\n  )\r\n\r\n  const { data, error, status } = state\r\n\r\n  const run = useCallback((promise: Promise<T>) => {\r\n    dispatch({ type: 'pending' })\r\n    promise.then(\r\n      (data) => {\r\n        dispatch({ type: 'resolved', data })\r\n      },\r\n      (error: Error) => {\r\n        dispatch({ type: 'rejected', error: error.message })\r\n      }\r\n    )\r\n  }, [])\r\n\r\n  return {\r\n    isIdle: status === 'idle',\r\n    isLoading: status === 'pending',\r\n    isError: status === 'rejected',\r\n    isSuccess: status === 'resolved',\r\n    error,\r\n    status,\r\n    data,\r\n    run,\r\n  }\r\n}\r\n\r\nexport { useAsync }\r\n","C:\\Front\\Movie-Search\\src\\app\\Toggle.tsx",["244"],"import React from 'react'\r\nimport { device } from './lib'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: none;\r\n  z-index: 1;\r\n  position: relative;\r\n  span {\r\n    display: none;\r\n    width: 33px;\r\n    height: 4px;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    background: #ffffff;\r\n    border-radius: 3px;\r\n    z-index: 1;\r\n    transform-origin: 4px 0px;\r\n    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),\r\n      background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;\r\n  }\r\n\r\n  @media ${device.laptopM} {\r\n    display: block;\r\n    span {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  span:first-child {\r\n    transform-origin: 0% 0%;\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform-origin: 0% 100%;\r\n  }\r\n`\r\nconst ContainerHidden = styled(Container)`\r\n  span {\r\n    opacity: 1;\r\n    transform: rotate(45deg) translate(-2px, -1px);\r\n    background: #ffffff;\r\n  }\r\n\r\n  span:nth-last-child(2) {\r\n    opacity: 0;\r\n    transform: rotate(0deg) scale(0.2, 0.2);\r\n  }\r\n\r\n  span:nth-last-child(1) {\r\n    transform: rotate(-45deg) translate(0, -1px);\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 32px;\r\n  position: absolute;\r\n  top: -7px;\r\n  left: -5px;\r\n  z-index: 2;\r\n  outline: none;\r\n`\r\n\r\ntype PropsToggle = {\r\n  isHidden: boolean\r\n  onClick: () => void\r\n}\r\n\r\nexport default function Toggle({ isHidden, onClick }: PropsToggle) {\r\n  const СonditionContainer = isHidden ? Container : ContainerHidden\r\n  return (\r\n    <СonditionContainer>\r\n      <Button onClick={onClick}></Button>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </СonditionContainer>\r\n  )\r\n}\r\n","C:\\Front\\Movie-Search\\src\\app\\Image.tsx",["245"],"import React, { useState, useEffect } from 'react'\r\nimport error from './../style/error.png'\r\n\r\ninterface Props {\r\n  src: string\r\n  size?: string\r\n}\r\n\r\nexport const Image = ({ src, size = '100%' }: Props) => {\r\n  const [fallback, setFallback] = useState(src)\r\n  const [errored, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setFallback(src)\r\n  }, [src])\r\n\r\n  const handleError = () => {\r\n    if (!errored) {\r\n      setError(true)\r\n      setFallback(error)\r\n    }\r\n  }\r\n\r\n  const style = {\r\n    width: size,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img src={fallback} onError={handleError} alt='poster' style={style} />\r\n    </>\r\n  )\r\n}\r\n",{"ruleId":"246","severity":1,"message":"247","line":23,"column":8,"nodeType":"248","messageId":"249","endLine":23,"endColumn":33},{"ruleId":"246","severity":1,"message":"250","line":23,"column":26,"nodeType":"251","messageId":"252","endLine":23,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":129,"column":8,"nodeType":"248","messageId":"249","endLine":129,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":10,"column":1,"nodeType":"248","messageId":"249","endLine":10,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":3,"column":8,"nodeType":"251","messageId":"255","endLine":3,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":62,"column":23,"nodeType":"256","messageId":"249","endLine":62,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":8,"column":31,"nodeType":"256","messageId":"249","endLine":8,"endColumn":36},{"ruleId":"253","severity":1,"message":"257","line":2,"column":10,"nodeType":"251","messageId":"255","endLine":2,"endColumn":21},{"ruleId":"253","severity":1,"message":"258","line":3,"column":10,"nodeType":"251","messageId":"255","endLine":3,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":8,"column":31,"nodeType":"256","messageId":"249","endLine":8,"endColumn":36},{"ruleId":"246","severity":1,"message":"247","line":7,"column":29,"nodeType":"256","messageId":"249","endLine":7,"endColumn":34},{"ruleId":"253","severity":1,"message":"259","line":3,"column":10,"nodeType":"251","messageId":"255","endLine":3,"endColumn":17},{"ruleId":"253","severity":1,"message":"260","line":5,"column":8,"nodeType":"251","messageId":"255","endLine":5,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":46,"column":27,"nodeType":"256","messageId":"249","endLine":46,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":108,"column":23,"nodeType":"256","messageId":"249","endLine":108,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":29,"column":33,"nodeType":"256","messageId":"249","endLine":29,"endColumn":38},{"ruleId":"246","severity":1,"message":"247","line":18,"column":31,"nodeType":"256","messageId":"249","endLine":18,"endColumn":79},{"ruleId":"246","severity":1,"message":"247","line":93,"column":29,"nodeType":"256","messageId":"249","endLine":93,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":19,"column":30,"nodeType":"256","messageId":"249","endLine":19,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":8,"column":33,"nodeType":"256","messageId":"249","endLine":8,"endColumn":38},{"ruleId":"253","severity":1,"message":"261","line":2,"column":10,"nodeType":"251","messageId":"255","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":31,"column":34,"nodeType":"256","messageId":"249","endLine":34,"endColumn":18},{"ruleId":"262","severity":1,"message":"263","line":36,"column":50,"nodeType":"264","messageId":"265","endLine":36,"endColumn":55},{"ruleId":"246","severity":1,"message":"247","line":13,"column":27,"nodeType":"256","messageId":"249","endLine":13,"endColumn":79},{"ruleId":"246","severity":1,"message":"247","line":59,"column":24,"nodeType":"256","messageId":"249","endLine":59,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":33,"column":33,"nodeType":"256","messageId":"249","endLine":33,"endColumn":54},{"ruleId":"246","severity":1,"message":"247","line":9,"column":22,"nodeType":"256","messageId":"249","endLine":9,"endColumn":56},{"ruleId":"246","severity":1,"message":"247","line":123,"column":29,"nodeType":"256","messageId":"249","endLine":123,"endColumn":34},{"ruleId":"253","severity":1,"message":"266","line":144,"column":5,"nodeType":"251","messageId":"255","endLine":144,"endColumn":11},{"ruleId":"253","severity":1,"message":"267","line":146,"column":5,"nodeType":"251","messageId":"255","endLine":146,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":29,"column":27,"nodeType":"256","messageId":"249","endLine":29,"endColumn":54},{"ruleId":"246","severity":1,"message":"247","line":38,"column":8,"nodeType":"248","messageId":"249","endLine":38,"endColumn":74},{"ruleId":"246","severity":1,"message":"247","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":23},{"ruleId":"253","severity":1,"message":"268","line":9,"column":11,"nodeType":"251","messageId":"255","endLine":9,"endColumn":16},{"ruleId":"253","severity":1,"message":"269","line":9,"column":18,"nodeType":"251","messageId":"255","endLine":9,"endColumn":24},{"ruleId":"253","severity":1,"message":"266","line":9,"column":26,"nodeType":"251","messageId":"255","endLine":9,"endColumn":32},{"ruleId":"253","severity":1,"message":"270","line":9,"column":34,"nodeType":"251","messageId":"255","endLine":9,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":26,"column":8,"nodeType":"248","messageId":"249","endLine":26,"endColumn":23},{"ruleId":"253","severity":1,"message":"269","line":13,"column":11,"nodeType":"251","messageId":"255","endLine":13,"endColumn":17},{"ruleId":"253","severity":1,"message":"271","line":1,"column":17,"nodeType":"251","messageId":"255","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"272","line":3,"column":19,"nodeType":"251","messageId":"255","endLine":3,"endColumn":29},{"ruleId":"253","severity":1,"message":"273","line":3,"column":31,"nodeType":"251","messageId":"255","endLine":3,"endColumn":40},{"ruleId":"253","severity":1,"message":"274","line":2,"column":8,"nodeType":"251","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"272","line":5,"column":19,"nodeType":"251","messageId":"255","endLine":5,"endColumn":29},{"ruleId":"253","severity":1,"message":"273","line":5,"column":31,"nodeType":"251","messageId":"255","endLine":5,"endColumn":40},{"ruleId":"253","severity":1,"message":"268","line":8,"column":11,"nodeType":"251","messageId":"255","endLine":8,"endColumn":16},{"ruleId":"253","severity":1,"message":"275","line":1,"column":8,"nodeType":"251","messageId":"255","endLine":1,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":28,"column":1,"nodeType":"248","messageId":"249","endLine":28,"endColumn":23},{"ruleId":"246","severity":1,"message":"247","line":69,"column":16,"nodeType":"248","messageId":"249","endLine":69,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":9,"column":22,"nodeType":"256","messageId":"249","endLine":9,"endColumn":56},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'moviesReducer' is defined but never used.","unusedVar","ArrowFunctionExpression","'useSelector' is defined but never used.","'RootState' is defined but never used.","'useAuth' is defined but never used.","'style' is defined but never used.","'request' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","'logout' is assigned a value but never used.","'isOpenLogin' is assigned a value but never used.","'login' is assigned a value but never used.","'singup' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useState' is defined but never used.","'singupType' is defined but never used.","'loginType' is defined but never used.","'styled' is defined but never used.","'React' is defined but never used."]